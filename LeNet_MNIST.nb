(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    438498,       9131]
NotebookOptionsPosition[    425759,       8905]
NotebookOutlinePosition[    426370,       8926]
CellTagsIndexPosition[    426264,       8921]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["LeNet and MNIST", "Subtitle",
 CellChangeTimes->{{3.7810256426425333`*^9, 
  3.78102567740014*^9}},ExpressionUUID->"8b3e0eec-bd76-4153-8768-\
37fa2a2c0ae1"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"from", ":", " ", "https", ":"}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "tutorial"}], "/", 
     RowBox[{"NeuralNetworksIntroduction", ".", "html"}]}], "#621730217"}]}], 
  "Text"]], "Input",
 CellChangeTimes->{{3.781025680817813*^9, 
  3.781025688691648*^9}},ExpressionUUID->"4a0dc4ad-f050-4580-8925-\
41ff7af673bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData", " ", "=", " ", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", " ", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", " ", "=", " ", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<MNIST\>\"", ",", " ", "\"\<TestData\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.781025709700762*^9, 3.781025751437619*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"542695de-34f6-425f-8b3d-b89ad27edb4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSample", " ", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"trainingData", ",", " ", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7810257644562063`*^9, 3.7810257737260723`*^9}, {
  3.781025867139846*^9, 3.7810258704128847`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1c3860d3-7fb9-4675-88d5-3ec9d39190fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cHqGdwwCGz3wGnG0AyOOTqgRI4TMQjtR8oVY/DHXikIO5gcHDAVACV
AkvvxyZVDwQO6JIOSJbtR3VtPYqXUb1fj+JGTDm4HWhmAoO4HocUyC31cBZ6
EMD4YK+gSoFidD/Qb9h8DnYbBGDIQCOcoR6LzOAAAIW9lhs=
       "], {{0, 28}, {28, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "6"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x/U4Jr9C0zB9W9B5DO+LkypCq3PICqHCVOuiH0amNZk2o8hJ8oEtuaF
lP0vdKmZjFVgup1xI7rUVx2mo2CGAMt2dLnXTPzXwQxGMQzbXjNpgekljN7/
X14/WF7+BVmOux1EBzHK2sgyMTIxvUHIfa9nY2TQl2dkZGBkZNSfswTV1GIx
TiYgYMusuPgNw8r/5zduDGaqxxSHgE/2TN9xyW1gYsIl9d8fGjhYwEE+xUe4
5DqZcJtpwMQxC5fcTCacUlQDAID0xig=
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x98YNOa+PBwbe36S+gSz6s5mRghgHkyqtRMDpCotndr+WQNRqbgN8hy
DIzVc3xW/gQx3wYwMlogy7179w/O/uvNyLQfl6OeCDDm4JL7IMPojkX46+lv
/0/rMzJuwJAJU5ZllFUGOln6HoacFNSHjOJ3MORWGLEDJRRUGBlVb2Pad+3C
1Atff6UzMqqdw+HQX55AY7/ikPwdy8i4BIfc/8cKjGK45P57MTLiktooyugK
Y9+dP3/7N0RwnxdlZIIHjTTIxx5+s5YcXLJkSaIfUKoerrA0Ag1U43QJ5QAA
HFGc6g==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9okMcwC5fUbwOmeFxyq5mYluCQ+mHMZPoBh9wuJqZIXEbmMDFl45A6
IMYkcBuHnCsT03IcUtdFmYRuYpf6FMUkvAWHtltiTCa4PLBZiEnsBnap24JM
TPyXsMtdZmISr/qKXS6TiSkPh20fzJiY/HHIAbUxOWCXesQBlCvHLncfKLX2
D3a59/oh0/7isI5OAADp39rD
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9A8MNk9R9ccr8cXX7hktvNGIvTTFHGAlxSs9h8PuKQusTOuByXti7G
EJy2JTLWgelpeRhS7zgYH4IZBUqv0OUKGIXfgRlcWu/RpKaxMaZ//3/9//+N
zE5oUr+tGRkZ+QU4BQS4GNHlLjMy2/S7Nq5YsSIDQ+5b3XQoy5VxJk6vGDCu
wyOXgkcO3T7K5aJYcUYirQEAatHXJA==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781025774470292*^9, 3.781025880022685*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fad1fb4c-16aa-45f7-9590-a1a4353eaedf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenetModel", " ", "=", " ", 
  RowBox[{
  "NetModel", "[", "\"\<LeNet Trained on MNIST Data\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.781025785801736*^9, 3.781025802858094*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0fef0946-fbf4-43d7-b290-1b3be255698f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.0.11", "VarianceImage" -> None, "Interleaving" -> 
                    False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {0, 1, 
                    Skeleton[7], 9}, "Dimensions" -> 10, "$Version" -> 
                    "12.0.11", "InputDepth" -> 1, "$Rank" -> 0]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781025846587879*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f3aa45b6-edfd-40c4-8cc6-f59e36f0fc54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenetModel", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8wsH/9SgbGVeuB4DKGnCkTDOjeRJV5YMQKl2OagabthDxCjmsFmmSE
HhAogeX4zmM650pzAliOex2K8Isnl+pTVaBmSk1CkVNhQgKHUaTm8uCWQ9XX
hio3nYnJYwUYBDExiSDL7L3/9/v3XxD2b20m5nSE1ELOPgRnowgTUzKct52b
CSF3PokJWW49E0JuIx/I71vgcrv4maR0Gm+DgKEIyJ06SE5JRPYAk1DpPSS5
m9JIUmiB+f+GLlwqast/NHBlYyxU7hm6FP0AADtWUUA=
       "], {{0, 28}, {28, 0}}, {
       0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4MTx41MYHLFI/H7qysTEyMQk+BBTbgITo+OkCCYmKUypu9wi8/79
/6bM6IUpV8uYByR38DHNxpD6psBz8P//P/pMjn8w5HKYwoFkJiOTB6aRAUy9
/z8ksjAy1WORY5zywY6RkZH3NTZ9zKyMokyMxZhS//fzsbEHb2ViPopF7v9N
IA5irMEmBQZsTAvwyC3EJXWMReALLjlbpmxcUmfYOM7ikitmrMPpEivGaTjl
ptjtxylHCgAAd+jGFw==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+UYFuTTUzttl9YZG6JMDIBAaPlBUw5VyZGLhGgHBP7NAw5OyZGxXMn
M/iYmHh3osvdlGFkSvz//5U+E5MMhsa90oyMff//vzZiZIzZj6FTgUng0P//
a4GWSr1Cl2xiZzJwVWMHylW+xTDWDeROJhaRk7/RZZ4E8IDkYvdgevBUEiMQ
MFRiyvz/78XIxJVgz6j7HVPqjwMj17L/SxiZGjDl6pkY6/+D5NQx5SyYGK/8
/38Em9wXDUYGoKcWMzCqYVpnwsQIDOMJjEx9mGZu5WUUD47kYZTDDJL//2+Y
CALjlj0DixQQvPeMrTuNXYp6AACANZMJ
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4IQwYxMOqe9WzEzV31edxSa3mplZ/P4DZu6TWOTEmZl7/lsxM9/B
lOpmY44GKYjGlDrExCS34f8qJqY6DKnbMszCr/7f12E2+oIh18PEvPb//2xm
5sUYUr0CTGE//u9gYma2Dku/giL1zZhZ9cu3qTpAOWZmJoF3yHI3mJgYmYCA
QUBHR4qB6RWy3HmgapAWgd3//09lkv+ILPd3SahmODMz90GQ+Q3XMZzTz8zc
hultMHirzpzyA4dcCxPrThxS65mYu3BI/TRk4nqDQ24JM1MRDqn/YcyBmGFM
AwAAp4+rMQ==
       "], {{0, 28}, {28, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.781025887491384*^9, 3.781025901527885*^9}, {
  3.7810259335557327`*^9, 3.781025946414824*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"10a3d300-76e8-4a65-b1bb-06b02bbd7675"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "9", ",", "8", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.781025905135255*^9, 3.78102594754669*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"acf8c18d-1656-4631-90bf-54e2faee9bcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetTrain", "[", 
  RowBox[{
   RowBox[{"NetModel", "[", "\"\<LeNet\>\"", "]"}], ",", " ", "trainingData", 
   ",", " ", 
   RowBox[{"ValidationSet", "\[Rule]", "testData"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.781025862354938*^9, 3.781025863740159*^9}, {
  3.781025960031056*^9, 3.781025989363946*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2d885446-5e5b-423e-8574-61cac1e865e5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.0.11", "VarianceImage" -> None, "Interleaving" -> 
                    False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {0, 1, 
                    Skeleton[7], 9}, "Dimensions" -> 10, "$Version" -> 
                    "12.0.11", "InputDepth" -> 1, "$Rank" -> 0]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781026310532439*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f787dd1f-6077-4562-b0af-651d07705d85"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Layers", "Subtitle",
 CellChangeTimes->{{3.7810263312616796`*^9, 
  3.781026365365139*^9}},ExpressionUUID->"99e249f2-6f8e-4cfc-b772-\
674acd9cd778"],

Cell[CellGroupData[{

Cell[BoxData["lenetModel"], "Input",
 CellChangeTimes->{{3.781026368779598*^9, 3.781026382148633*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1987e0a6-bffe-4372-ae26-1b04a7f7bb7e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.0.11", "VarianceImage" -> None, "Interleaving" -> 
                    False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {0, 1, 
                    Skeleton[7], 9}, "Dimensions" -> 10, "$Version" -> 
                    "12.0.11", "InputDepth" -> 1, "$Rank" -> 0]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {
                    235., {93.672119140625, 99.327880859375}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7810263831712627`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"7090aba4-55cc-4d88-9643-64c272350862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"lenetModel", ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.781026461197411*^9, 3.7810264783558807`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"61b96391-eef0-4d43-b02a-6629a58633a7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["SoftmaxLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Level\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"-", "1"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", FontWeight -> Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Level\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"-", "1"}], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", FontWeight -> Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("SoftmaxLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781026480198258*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"691a1c5e-637b-4f98-943b-916e232537f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "2", ",", "5", ",", "2", ",", "4", ",", "7", ",", "4", ",", "3", 
    ",", "5", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7810265064951477`*^9, 3.781026529263969*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9b553bff-c478-456c-b67c-6e58e4f2d40b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0017421274678781629`", ",", "0.004735593218356371`", ",", 
   "0.09511692821979523`", ",", "0.004735593218356371`", ",", 
   "0.034991562366485596`", ",", "0.7028243541717529`", ",", 
   "0.034991562366485596`", ",", "0.01287267729640007`", ",", 
   "0.09511692821979523`", ",", "0.01287267729640007`"}], "}"}]], "Output",
 CellChangeTimes->{3.781026531946438*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"997a5fab-6437-46f9-a1d6-f78852f484e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer", "[", 
  RowBox[{"NumericArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.", ",", "2.", ",", "5.", ",", "2.", ",", "4.", ",", "7.", ",", "4.", 
      ",", "3.", ",", "5.", ",", "3."}], "}"}], ",", "\"\<Real32\>\""}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.781026561327734*^9, 3.7810265775183077`*^9}, {
  3.781026622961727*^9, 3.781026663501184*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"14869858-ac6e-498d-a6d9-b2de4703d6d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real32\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "10", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real32\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "10", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.0017421274678781629`", "\", \"", 
                    "0.004735593218356371`", "\", \"", "0.09511692821979523`",
                     "\", \"", "0.004735593218356371`", "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RawArray["Real32",{0.0017421274678781629`, 0.004735593218356371, 
   0.09511692821979523, 0.004735593218356371, 0.034991562366485596`, 
   0.7028243541717529, 0.034991562366485596`, 0.01287267729640007, 
   0.09511692821979523, 0.01287267729640007}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781026672854226*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f3aba2d2-b31f-474a-bd8f-3999f8461f2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.781026677242223*^9, 3.781026689860114*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4f71aad7-df29-43ba-84c4-66c0ee42a0b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0017421274678781629`", ",", "0.004735593218356371`", ",", 
   "0.09511692821979523`", ",", "0.004735593218356371`", ",", 
   "0.034991562366485596`", ",", "0.7028243541717529`", ",", 
   "0.034991562366485596`", ",", "0.01287267729640007`", ",", 
   "0.09511692821979523`", ",", "0.01287267729640007`"}], "}"}]], "Output",
 CellChangeTimes->{3.781026690717284*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9925a9aa-a64b-419b-8d38-aa674e1d6d49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.781026702783761*^9, 3.781026706403611*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"cd48bf23-9dd5-4474-906d-48f80dd675aa"],

Cell[BoxData["1.0000000038417056`"], "Output",
 CellChangeTimes->{3.781026707280238*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ae44fb0e-5430-49ab-969b-9ff8edc18b59"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construct a new layer", "Subsubsection",
 CellChangeTimes->{{3.7810267171531267`*^9, 
  3.781026740733493*^9}},ExpressionUUID->"8b374923-99a3-47eb-8940-\
704ece15ef68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linear", " ", "=", " ", 
  RowBox[{"LinearLayer", "[", 
   RowBox[{"3", ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.781026744602681*^9, 3.781026760854096*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"08e505fd-d491-4077-9b89-ef815c21cbcc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[
                 
                 GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                   1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37, BaseStyle -> 
                 GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[
                 
                 GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {
                   1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    GrayLevel[0.6], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37, BaseStyle -> 
                 GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Output dimensions\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"3\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    StyleBox["\"Weights\"", 
                    RGBColor[0.58, 0.25, 0.25]], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    StyleBox["\"Biases\"", 
                    RGBColor[0.58, 0.25, 0.25]], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"optional\"", "\" \"", 
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                   "RowDefault"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781026764404393*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"29ee993f-888b-4dec-8dba-955d7565e6c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linear", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.781026781197877*^9, 3.781026787682152*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f958be9b-004c-433d-a5f7-e1b162160d35"],

Cell[BoxData[
 TemplateBox[{
  "LinearLayer","nninit",
   "\"Cannot \\!\\(\\*RowBox[{\\\"\\\\\\\"evaluate\\\\\\\"\\\"}]\\) net: \
unspecified \\!\\(\\*RowBox[{\\\"\\\\\\\"value\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"\\\\\\\"array \
\\\\\\\\\\\\\\\"Weights\\\\\\\\\\\\\\\"\\\\\\\"\\\"}]\\).\"",2,16,2,
   25179268186926339262,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7810267890415077`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"5187dba6-6c58-44b8-8301-788db3b37fb8"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.781026789050579*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"3835e67a-d951-4e3b-8ced-cd0b72e2e207"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initializedLinear", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", "linear", "]"}]}]], "Input",
 CellChangeTimes->{{3.781026816284597*^9, 3.781026829991439*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e204503d-881a-42ae-9aeb-e67763bb3604"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  RGBColor[0.33, 0.33, 0.33], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Output dimensions\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"3\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Weights\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Biases\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7810268352884417`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e1398373-3c36-4f91-af48-072622e7d526"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initializedLinear", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7810268408967657`*^9, 3.7810268458221483`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9ee2747c-2ccd-4d10-803b-93cfd699c247"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.5958086252212524`"}], ",", 
   RowBox[{"-", "1.793724536895752`"}], ",", 
   RowBox[{"-", "1.9682292938232422`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.781026846744485*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"e719fd13-1e25-439d-9b08-8774a64a516a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"initializedLinear", ",", " ", "\"\<Weights\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.781026857259413*^9, 3.7810268680533133`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5e95641b-1d67-47fa-863f-ac6c2f6a295b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real32\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real32\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"-", "0.06924412399530411`"}], "\", \"", 
                    RowBox[{"-", "0.4857734441757202`"}], "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RawArray[
   "Real32",{{-0.06924412399530411, -0.4857734441757202}, \
{-0.4806913137435913, -0.27744731307029724`}, {-0.7507154941558838, \
-0.1555994153022766}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781026870839815*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"04ec19f8-20bb-4586-bc02-32018cc25bd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"initializedLinear", ",", " ", "\"\<Biases\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7810268975516148`*^9, 3.7810269105385303`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1852dd0f-74b4-4607-a65a-253702605e22"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real32\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "3", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Real32\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\", \"", "0.`", "\", \"", "0.`"}, 
                   "RowDefault"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RawArray["Real32",{0., 0., 0.}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781026913252615*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"bff1ea5c-d5b9-47ab-8fb4-e73b53b5a062"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", "%"}]], "Input",
 CellChangeTimes->{{3.7810269980659924`*^9, 3.781027003975065*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"05735cb4-b106-45f8-ac5a-636d08dbb44b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7810270046756907`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"97862065-50b9-4eee-b71a-dcd6523cf945"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msloss", "=", 
  RowBox[{"MeanSquaredLossLayer", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.781027007116929*^9, 3.7810270151837378`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"16a8de8f-8f07-4549-9884-4843a2ffbc76"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["MeanSquaredLossLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Ports", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("MeanSquaredLossLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781027020375181*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c24dc5e8-a6a3-49db-a815-493a505168b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msloss", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Input\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", " ", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0", ",", "4"}], "}"}]}]}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.781027036331994*^9, 3.781027085640409*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"501f5d45-8ffd-48cf-839c-6dbf973e8fd2"],

Cell[BoxData["4.666666507720947`"], "Output",
 CellChangeTimes->{3.781027088513257*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"c4b5dfed-5257-429a-ab94-02a0cc34e7da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Layer"}]], "Input",
 CellChangeTimes->{{3.7810271239080353`*^9, 3.781027133057962*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4f130e20-cbbe-476d-816f-76a7551586d9"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AggregationLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "AggregationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["LocalResponseNormalizationLayer", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "LocalResponseNormalizationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["AppendLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "AppendLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LongShortTermMemoryLayer", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "LongShortTermMemoryLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["AttentionLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "AttentionLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MeanAbsoluteLossLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "MeanAbsoluteLossLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BasicRecurrentLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "BasicRecurrentLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["MeanSquaredLossLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "MeanSquaredLossLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BatchNormalizationLayer", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "BatchNormalizationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NormalizationLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "NormalizationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CatenateLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "CatenateLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["OrderingLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "OrderingLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ConstantArrayLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ConstantArrayLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PaddingLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "PaddingLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ConstantPlusLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ConstantPlusLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PartLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "PartLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ConstantTimesLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ConstantTimesLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PoolingLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "PoolingLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ContrastiveLossLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ContrastiveLossLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PrependLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "PrependLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ConvolutionLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ConvolutionLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ReplicateLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ReplicateLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CrossEntropyLossLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "CrossEntropyLossLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ReshapeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ReshapeLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CTCLossLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "CTCLossLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ResizeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ResizeLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DeconvolutionLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "DeconvolutionLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SequenceAttentionLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SequenceAttentionLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DotLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "DotLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SequenceLastLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SequenceLastLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DotPlusLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "DotPlusLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SequenceMostLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SequenceMostLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "DropoutLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SequenceRestLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SequenceRestLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ElementwiseLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ElementwiseLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SequenceReverseLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SequenceReverseLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["EmbeddingLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "EmbeddingLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftmaxLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SoftmaxLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ExtractLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["SpatialTransformationLayer", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SpatialTransformationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FlattenLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "FlattenLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SummationLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "SummationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GatedRecurrentLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "GatedRecurrentLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ThreadingLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ThreadingLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ImageAugmentationLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "ImageAugmentationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TotalLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "TotalLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["InstanceNormalizationLayer", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "InstanceNormalizationLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TransposeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "TransposeLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["LinearLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "LinearLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UnitVectorLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-13aa4399-f987-4640-80be-e89e8fa2df15", {
                   "UnitVectorLayer", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.475]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.781027343397662*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"101a8c15-486c-4161-b66d-8ac90178107a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ConvolutionLayer",
              ButtonNote->"paclet:ref/ConvolutionLayer"],
             "\"paclet:ref/ConvolutionLayer\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"s\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) represents a trainable convolutional net \
layer having \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) output channels and \
using kernels of size \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) to compute \
the convolution.\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"], \\\"}\\\"}]}], \\\"]\\\"}]\\) represents a \
layer performing one-dimensional convolutions with kernels of size \
\\!\\(\\*StyleBox[\\\"s\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"w\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) represents a layer performing \
two-dimensional convolutions with kernels of size \
\\!\\(\\*RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\"\[Times]\\\", StyleBox[\
\\\"w\\\", \\\"TI\\\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) represents a three-dimensional \
convolutions with kernels of size \\!\\(\\*RowBox[{StyleBox[\\\"h\\\", \\\"TI\
\\\"], \\\"\[Times]\\\", StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"\
\[Times]\\\", \\\"TI\\\", FontSlant -> \\\"Plain\\\"], StyleBox[\\\"d\\\", \\\
\"TI\\\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"kernel\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"opts\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
includes options for padding and other parameters.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ConvolutionLayer", 
                    "paclet:ref/ConvolutionLayer", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ConvolutionLayer.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ConvolutionLayer.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"\<\"Stride\"\>", "\[Rule]", "1"}]},
                    {
                    RowBox[{"\<\"PaddingSize\"\>", "\[Rule]", "0"}]},
                    {
                    RowBox[{"\<\"Dilation\"\>", "\[Rule]", "1"}]},
                    {
                    RowBox[{"\<\"ChannelGroups\"\>", "\[Rule]", "1"}]},
                    {
                    RowBox[{"\<\"Interleaving\"\>", "\[Rule]", "False"}]},
                    {
                    RowBox[{"\<\"Weights\"\>", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"\<\"Biases\"\>", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"\<\"Input\"\>", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"\<\"Output\"\>", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","9","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"\<\"Stride\"\>", "\[Rule]", "1"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","9","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConvolutionLayer\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ConvolutionLayer",
              ButtonNote->"paclet:ref/ConvolutionLayer"],
             "\"paclet:ref/ConvolutionLayer\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"s\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) represents a trainable convolutional net \
layer having \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) output channels and \
using kernels of size \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) to compute \
the convolution.\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"], \\\"}\\\"}]}], \\\"]\\\"}]\\) represents a \
layer performing one-dimensional convolutions with kernels of size \
\\!\\(\\*StyleBox[\\\"s\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"w\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) represents a layer performing \
two-dimensional convolutions with kernels of size \
\\!\\(\\*RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\"\[Times]\\\", StyleBox[\
\\\"w\\\", \\\"TI\\\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"w\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) represents a three-dimensional \
convolutions with kernels of size \\!\\(\\*RowBox[{StyleBox[\\\"h\\\", \\\"TI\
\\\"], \\\"\[Times]\\\", StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"\
\[Times]\\\", \\\"TI\\\", FontSlant -> \\\"Plain\\\"], StyleBox[\\\"d\\\", \\\
\"TI\\\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"ConvolutionLayer\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"kernel\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"opts\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
includes options for padding and other parameters.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ConvolutionLayer\", \"[\", RowBox[{StyleBox[\"n\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}], \"]\"}]\) represents a trainable \
convolutional net layer having \!\(\*StyleBox[\"n\", \"TI\"]\) output \
channels and using kernels of size \!\(\*StyleBox[\"s\", \"TI\"]\) to compute \
the convolution.\n\!\(\*RowBox[{\"ConvolutionLayer\", \"[\", \
RowBox[{StyleBox[\"n\", \"TI\"], \",\", RowBox[{\"{\", StyleBox[\"s\", \
\"TI\"], \"}\"}]}], \"]\"}]\) represents a layer performing one-dimensional \
convolutions with kernels of size \!\(\*StyleBox[\"s\", \"TI\"]\).\n\
\!\(\*RowBox[{\"ConvolutionLayer\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"w\", \
\"TI\"]}], \"}\"}]}], \"]\"}]\) represents a layer performing two-dimensional \
convolutions with kernels of size \!\(\*RowBox[{StyleBox[\"h\", \"TI\"], \"\
\[Times]\", StyleBox[\"w\", \"TI\"]}]\).\n\!\(\*RowBox[{\"ConvolutionLayer\", \
\"[\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"w\", \"TI\"], \",\", \
StyleBox[\"d\", \"TI\"]}], \"}\"}]}], \"]\"}]\) represents a \
three-dimensional convolutions with kernels of size \
\!\(\*RowBox[{StyleBox[\"h\", \"TI\"], \"\[Times]\", StyleBox[\"w\", \"TI\"], \
StyleBox[\"\[Times]\", \"TI\", FontSlant -> \"Plain\"], StyleBox[\"d\", \
\"TI\"]}]\).\n\!\(\*RowBox[{\"ConvolutionLayer\", \"[\", RowBox[{StyleBox[\"n\
\", \"TI\"], \",\", StyleBox[\"kernel\", \"TI\"], \",\", StyleBox[\"opts\", \
\"TI\"]}], \"]\"}]\) includes options for padding and other parameters.", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ConvolutionLayer", "Web" -> 
      "http://reference.wolfram.com/language/ref/ConvolutionLayer.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     "Stride" -> 1, "PaddingSize" -> 0, "Dilation" -> 1, "ChannelGroups" -> 1,
       "Interleaving" -> False, "Weights" -> Automatic, "Biases" -> Automatic,
       "Input" -> Automatic, "Output" -> Automatic}, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`ConvolutionLayer"], False]]], "Print",
 CellTags->
  "Info-13aa4399-f987-4640-80be-e89e8fa2df15",ExpressionUUID->"34977807-20e0-\
4112-8fae-1e5a33853b43"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NetEncoders", "Subsection",
 CellChangeTimes->{{3.7810276561928263`*^9, 
  3.781027665079721*^9}},ExpressionUUID->"ca00125a-6e3e-4325-94d1-\
5656f1586907"],

Cell["A net encoder that produces a 1x12x12 array:", "Text",
 CellChangeTimes->{{3.781027681992538*^9, 
  3.7810277061889477`*^9}},ExpressionUUID->"779b0a0b-fecf-4ad2-b45a-\
9e1e6163ffc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageenc", " ", "=", " ", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"12", ",", " ", "12"}], "}"}], ",", " ", 
     RowBox[{"\"\<ColorSpace\>\"", "\[Rule]", " ", "\"\<Grayscale\>\""}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.781027710563538*^9, 3.781027761850287*^9}, {
  3.781027827265532*^9, 3.781027827505711*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4c7c0fd6-82e5-4db8-92dd-585019b1a621"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"12", ",", "12"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Grayscale\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["1", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Interleaving\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"12\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.78102777228722*^9, 3.781027831485347*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"e9243335-7dff-47a8-bda7-263a96b9b4b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"imageenc", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUMw5CwIAMcMugSZIrh64Kj4vwORWvL4j3IVQSw0ZUdaiS2DyLYhgxcgwY
ZkJ5WNyJHpz4whq3z9H9PSgAAHIkDsw=
      "], {{0, 28}, {28, 0}}, {0, 1},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], "]"}], " ", "//", " ", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.781027785256823*^9, 3.781027785261511*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"e13140c2-1e12-442d-8277-62f8892a7e33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", 
      "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.781027787937727*^9, 3.781027834441593*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"9eb1f9a4-0585-4b3d-aaa0-6726708cb150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"img", " ", "=", " ", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
tENqzRskBIj0JwI7h8KJkALY8CZ5Wj7SEAopY0o2F2t0oPgfUh2mWvpJbOR1
Sp2KCW8QdZeo1iWwBVCNkwja12TRbWSoXFjtw0m6LY77DMYDccLrfRnnh4Om
twWDAs+PHtqYJbrOir253PfKxUbaQLC9j5PN4lCf1Y3lvjdtJtmcB5dPvelq
cbMsKcXHeaPJCWB9fKrPaVufE/eLA60EyX6q86+gFkAdtEvVVqnqbSQN6Wp9
YIlC/4VEKBwtO/pFr1OCimdDT++pI2ep290ESds4nvuq70a2+oe2hd5jlaYi
iBOOvKYdXK/gmVDYNAofj2PncWIfpjNp1HOUubHK2jsUMR4i44iB7doOR6rD
Be/dQY4AVPo9wavDqv2olg9gsxFsnAJLjmFFH2qrd3Iy7tV5+7MfX5LGv0OP
+Crb26Il5BVa4HRaxJ1nfrER97yvnShzsSxOCTnscWWSy7VXWmluvi7fmJ0E
V04vvXvq9l2z09Zmk82OAcsT4/2OXnQ96et6aFnrvW28K+uhBdBceWUkJ64r
PIKd82A0hKjPPP4dguZ/KtL7tr/6t+pS2/ZrP4vuf0xUnZC2hEvCF3JSD/DK
t0PRW9qReWqRKYEsJJGxCHac0h7DcYCQbxCkAwaXEMp3JNkPpZXRFLaIxAEl
n4Gx3YnuAqp7CykAGt4knO2rbQom22bBdkDWz4TFR/DiV9HCMbzwrRUJOT3l
zMakxPJwvycuj4rSHpY+iuX1dZZm94fdenLX1NvF4rz35THOViDi3s7HUUet
Ls6IDDxz3yLy3km7y8dmWJwAl4/McT11zvnEqXu73+iwnal4bKG+/DplA3jn
12Sfd+y22oD3lxmuD/ul7OCfyoPUbx5HI2C/CHHyl6DW33S60TCazpnS/ztF
6g5M+0tlDNl0W+08T5lwXpm1GRNlKpI3YFUrR+qX8qu/oORTMfknEDPHkHc0
2jdIrRml3YqTACdWUdAOEWwQJ6dommMprTWhHQdVRqRqKy6gUdythACQLIAP
bkF6K9R935BtAKtbhtUepfKmwVwgevw9/bltf0lMWRI9PX4g0qqX9ry3NOUB
vdI8039TqMMyb0tTN5uFLtbgjuW7N0+dcb+zhVbuSysNenDz7vlDM81PTL9x
cFnACSfPkzevHprWcxIQkbuw0H2ay0B0aWH1sVut539Upcf8Ggv4Zb7+qXrw
RTnuqJgbTQm8KJL/Xzk1BgQNG5cwRMbXYoihsmi09AkibSHSIICU2ypLTiir
/OVVl9Q6Bhycya3/jF/7CSmdpFUvp9BjuGYGjk6VM0+hok9J0ogg9mtGYoUF
zRh3Nym/iUq+ptRjMPVcCq+hZOY4HxBsgAl2YMJ+jOdDNAKsdSvask8HnzZ3
IivNXJOwmBc7uf2JXdnT8EynvSVRS+rTNybffjPmFgi0/cnj4i4XW3Dn4sTb
J2weevrW0YI9XX4szPFyt99oaz7z7plvQy7ZPHTwunjwrTpzQFq80XVtu+L6
VNW5DwtN7DNP2tKDg3Qr9OVWvlH/Bt7o3JMU9WsM6X/Bgy9ynjq7TMkfEOYG
4NJhyqAedOfCOY3SmA+xuE+woSfsVEd5hqW0xExT/jkUvCaqWiqq/RyTGpPK
dRRyHNNO0YjfFbVuIxWv4djrJFkAMSGJLsG0H5HINUI7FcUWYfIyoicYst4m
uQBTWKCSIKIjBqvdgncf1VathXlAnLeUmWcNYyaroya2B5xoDP64zgeU+8wv
DZuTcGNs6LU53ubn3a3evGNh5GC228kk3NfB7OKFKbEPjyTFWfn6bksKPRN0
bXdTWYb/7UOFtt/Ai2OGzVd2XVyluPBu+8lTSYfCU+yiVVyFPkv4km3PFxhR
BEERKsPWP71VbOBN7G8vJ/tt4oBQFYTz7m5EGXmjIQ9lY0K/20aJ2wys1Vvc
mN91d7e82F1aaSovXQg50xTNaxDmKlQ2FlOuw0Q7dG6+ZvgzVedPqGYeiZcr
xL246kOcAhR6ipDuQdG1KDeGar4Du/ZRbECKbiG8H4m67UT9A7L5Klk0S4cg
N/dnZs5ZbSzgPVhU7XW2zntspef0DLsTMTfefHALBNmsczz/saPVLCcTM4eT
3jamS08cBDdtvmitfpj7xC3C68B183nlWUmhzrdjj+8TXVxGnZ3cdm7r0IV1
XSYn601PJp0IZdQPqvpLFJJB8iUbn8QL2UeSKjFL2J2jGamhqF+SL3/z0Mhf
H/QHoRWFHlCYvYYX+FEQxzmlA85LeAEbNclfS9pS6BE3h4N/VJa78ApusfK2
QfarULYel2/SyKYiw6uQgS8gMhGKt0qHA3idTBUnVz3wLUVMJtTz1X1nMfkZ
aiQADi/Heu0w9nKMdQ0f/pJonoj1BaJVLjB/ApljNFhoN5K6SvUQMKJXNgYt
L/cCJcGfZHnsCbMbH3NvXHbkezFBPz+P8fW2CLE69pnpEXDl4lx6Q0l5pu8N
i/dMD4ytLY+J8XQJP/Bu7+n1yKWJAov3GsxON5843nz2++wzd1ofVyDtGbKm
pxgpof5wtvEPEAV/jQHpUcRU3MbeZ1eHksxUnYmUVvDr54hfU32jpSz6PSaj
7o9eab5I4Bl6RxhKH/RhYYI08PIIU3F5seaAsTboENKaoX12Ek/8Acn+Tpxu
PvwsRvJw26D/GXH9zc5Y144gE1buLlxijaq3o8pp4ubv5D0rtKw9ahavP7eB
kB5W9+1FhMshYYyNrNbyUglJFCEGOP8oMuKOiV3I3gV4q7GmZ4sg20n5ZBGe
MbW/4KY8/nVJ1OyehCPtfrNL3UBt2I5klw/8L4Ky2Emdld800zxy0nziw81P
HwD2l+fXFIbFhpqe3D/O9vS0mhLfxLArwT8DhvVXyvNfai3GNZ48U3ri+uCV
vf0PY4br+6T1Txn3r/Cy3PQr88/k/+lFKCbilbp1uL/X679UWGKtYhdoFaNZ
19GqWoIiCYOThxP6ki99eSEkDRW+hkg2qS8HxfTJGgojSUIHsKYmXWMyBTsI
RGfmyUJ+FPpPUZSc4cWdzj5u3XrnmPrJXkn+VlXnJyPPN9S63Vb01Yt6K/jt
sYTsGSPzecuDTBWTEJZF46J5uGIuJjgL8bcI5TRUFERqggkpoARzCdETkv0Q
pb+iM0Rh3WfMp+eqgn5QNltJK45iUWAkcUlH8sFSd1DmvSDHc02A7dS0++uH
ajYFOS27YTU7xt/O+sJb9+98lxWS7G7146ndwPnyio7G9Jwst/CDrw1bTtE+
OERYThNe+qLi3HX6veOyukJePUvRnMKJu8Wz+kCVf9MwJ/9DSc8/kwzFuHrS
MMv6gjf12ACG29TeqNUDCefZ5SHy4TKIqqF+uPp0jE7XIZD4VYL8B30+iimi
T/FKNEG78YMA7hiv2APEbh+PpK3jPN1Bsz1dbn28z3udMOc7He9A1mJJ/TsK
+gV51+W2ZGd2UzYmqWEWl0oHoknOZk3Hd5RmPKHZRMmOUlqACKxx6TNcPpkU
GJEjplSnBzowhugAZNE2bsqK4Ya7OpNKTTuuCgSS/J1dD77OvQU6so+k3rfz
trxXmRwacHeJxdEx109vtTryg82xrQ/v3XYxP2e5752r+1bHu9x55Hnvue8h
uft61d2luN8Gue07klJ/fpytuqO6NqWu+3mhujJK7PKR6irAq6L1+Sny77l9
4A+TVsdipEE3E1rFSI53z43XmFdBkxWotjaquTmp1ve4tK6D1VXP5bQbTE+N
Ri4UD7VpJQM6plMq2Wo5UythyDl9iFKslfMJqYgddZh3f5fi7Cdw3xh8H8BO
LlDF72dEzG5K2NGUsKUt7R1G0QZm5U/cmp/R/k80ve/AodV43ywebZWiazMm
/QZXHEfRWcqBjcjgahydgnD34sJlKMODkNAI1de4CJCDn2qb3JHWOXjb2P60
n2UFb2BVWyEi4XAHRVVBvK7UimSTMt9z3PLnhY9SvO2cn4RZnz4EnG3meFvY
Xjl8wMF8XbS9/c2D2y8eWuJ1fVdX2o300/N7rH5UX5qjjNytuPuNquWpoidF
O9iESEYUkgGiNRFxWQDtAOIwHustNuiWP1MgVJ8PwnCIUqRmNMMpoRc1eC5u
vAFaroBW6zE0K1B5azEr94mMyyNwvZcnYVY9t16Sb7e84alXU5J/2tXNORbv
PzuzMMf6246nEVoEx+NPC6zelPrtxk9Nwg4D8qcpytsrtOGfKissGQ1+1bmb
ajI/bsn9rOLht/yaGwjnvLJzoTDvE7ztHUndJ8rB9ynxMkx9CFO+ou7bgEgX
oeq30f4TaGukVnyZ0JoR0lfg8EZ20d2WpKVIy+LGrIOKvOlE+luaoZDB7iq+
BGvuQ/uqJIWP2lPdj3tde9Pv1o5r5rOunAbpkd84mX577ufpuXF3/G0tz+95
x+Hox8M55wTRc7utFsgsP1M5zhP5HxDHOajpRXq1LmUJGxI0LY/U9jPRawC3
H0vkWpMEoq/S+FOV+FIvYpn4i5SCPt6gHq5r9/qixRa0XAONN4yqLoMKu+m0
APP23O62Cg6rua/GfXPOAZB5cHL7Q/umROeHx6bH7wRhP4DkK9ukAhHkdmjs
30Zvv0lYLYJ7AXnIWHFyAuo2H0kzUdOLRfT4zvyL/clrWlKWlyStZnUcUg2f
kNEPCfPXa5o+ULG2YJKPEc4XKP1zSjqXRHbj6DScuwNjNGpla0j1cVK0Dg5u
lTYfac/eIqPtZ5bsJp5P0uR9oao+LQyfTa/wLHtiX+D+02NfM5cLY3yuLHe7
uN3u2MzipA9C7r52attUH7tvUgKPmO14487hRe2ea+GTt2WecwV3l6HXZsvD
TzbfvtFterjqXnxfSgbjiTvGpaOhP1DWQHnrbXnqVQV3UEGoIYoQf+JI6K9F
rWpOdWvopibbcU22oPr6uPpLE/Muj2PkJQzUCLqyBNV+d56ZgsLTIOPM+Jp7
x6tdnJ6fXpy4F8TsAGl2PzVntw24HcbMAHVhHHJ8HHVkDPYz4F56dzD6gjDS
WvncXtsSIUjZ3u23tML1/Yrk1Zz67wdoRyTtdtK6w6rODyjhGlzwpqJ9tYb1
CdR8Rmm2QM0mSNIp1RpMOlM9uBfrPkb1rEY71sryrZH8FTAdsLL3SOLXyaKm
9KSezL05Ldfz4xiHFc5mEwLtT969vDLExjo59KtTu41tT5y4f+7nq3tei7Za
wvB/Cz4wxiNnSa58xDmpQ3AZO/F+u+mBbBPX3FMubeeP9d631dRFam+Pk9vN
p1/8acjlVPZlV0ZepL6N9584mE3pDRXSkC/BCQ1npCSg3uXdiiugywbQrEHz
Y3OuEvbyiP7G2vzbX+WdBkVmIPsoqLi+uSfcI/fS2pQ9IGaPUXlgUN+DMqXD
N+RFgJ2ZAA+NJQ+PQw+9Qr91QZrgpjGZjSTeRAtPSZ+ZMEznMy7NY9KOdVZv
6cvdxau3ULaeF1eYaoZ3IcL31Z0bMMHrBP6Nuj9E014s7P4K1xgNtywbLLwI
mZ9hnVNaH+xVpC1CciYwsy4goW+K4xbSE489uwqyg3cGXJxx+/jXPrYBkYFf
BF5f5XD6AyeL7z0tzzmYrAk4PV8ePgtGTMJjxsrvvMk78Y7kwhJpuh3r0ona
UxGV9mHcpDuaoF3SHGeF/w+K80u6L6wT3JnZcW51wc92woIHuN7sRl42UP81
vYhz/rqHgVSI63qenm66PqXWEtCcv1SrFAw5HBJDTkt7ZcjhorNj0i1Ajg5K
82U1rva5l44+3T0mxeSrxpDWVo+4EZvl0AzA4wAeBZqjYOjyekFxHnFzneTo
G6qQr5EyK0W6jXjX9HbPnSWJpwYStrY+WjtcuErYeElED2M2mYvrdim7d9XT
Vj0KOKvtuttX9yEimKcWvCprdSDpy2EnEJTtkDbe0GTPYaSZa/ynCdO3VPks
T7v9cajbJs8z0wLt7C2PH7t5YfFj14/DbObV+6yodP78xvG3W73GwUgAo42J
kGnSc2/wTDfJs4M4SYHDD9K7S9p6/Z1kLl/gTitZobZdF9cyL2zBbryp8ptF
j/EXtvSQuJiUDeOkwaf+c+bmqV+dBJ1Vo99monumUSFddY8b4k42R5wdGu7j
kiRXCxsb02uLgnueeRVavp15FjwzAcmnJlYHmNf7nE88OqvjSVxndlelvYP0
yveqs++pDs1ADk5SmrwmygjH0p0Vh8cr9gJVyEZN/yNO7rWy8z+Gnro8cOBj
scX0gTsfDiauULTt78z8ujfpKjuhtiQw/1GoDcHdiYqWoEPrcNF0xfAdtO9H
qhlwy7eioiys554wdZ/Az5ibfSrjyqR4j0N+zvtyAzbcv/rmqR9ejTY7Unvn
wyG/SdqoWXmWP8SZfquNfAWGA/hgrOb22yKTj0TBt/jFjxklbY0PU+tsrcUW
70BL0H/rbOfZi4OX16jdJkFXMHBtZ5N3noTfT5ZZa6IWYcykPyV4ehrd8Q5/
Kb2lDMVnugUnU2EjQpQv1gxwsV4+ydNgYimnf2CAjVIybju/PmGwNopRFt5X
GtFb2FHlF930JHeoYqQ3q3y4nq2ktckqstV+e5CjQOK4hiywRy0Xwp+A6uBk
QbC5uC+KnZ2ccSqoec82dM944qiRynSKxPX1kcwN0spV2vKf2KU7Ozq+IXnr
MMH7cGSVgrGS13tV2nRQ1TKLnrNfWn1mkMOUph4RR8xpCP0+zf69lsbYzBi3
iFtrXA8sT7N26fE6QoUawWAgCPo0+UYE22uzjgHJCGMieLzwyhRlwJf9/udq
7cIbzO60HLkgPbcCWgGV6wb6wxDp7U/hXYA5vNVxdm/iScehghQsfS30B9qQ
VyTp57WCNhIT/zptvwCK/aYM9fc9jv/U1ob67SdJA+P8u/f/oOPyAlEo59TW
PD3VXfJwkIcM8Em6GBuWCFk9hZzuIgW7XCPVl01iSg4lpQtlsqF+1kg7d6BC
1ZfNo8XX9vq5iB95K/PDsXvLRPfX8HyXo3ZTtQfGwB1Gyl2Txd7rBsoTEuwj
s0z3qvbplKYxdXQsehgIQq8Jo08IfIAiczK/eh7BWUixv8QUb/GGTHq7LUeq
VwzWrqYXHFdnvppdGJOb191XkTic78gvcxCWXM6+euCe6Y8JV51KbqUXXPIa
cV2LRhlLyz5vvW+BhL5GRQIqfKzG/42h6xsFXqtbrl6imd5rPnueZbqHtARy
j697/QOl3tuoW4B/dX75iQvPD9/oSizEOsPR+2OVru8PO+wXhH+rinoNzdmA
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
Yd0x+8MS1/9Y7D1Xyv7KZj5oJ0QKgTJy1xuVHoCwYvVgWzaiV9vELGXpanOH
u6gxqJexStwcyClilyfCsnYLL/9Y4tkTp3fV1N36pjJudGGMW+Z1oCNlgr7x
mcGOI6RFR8nzyfYdyGC8heEJC4KhguW431RY2mKJWmEvOUwIm0wh6+ENE8y/
PGYuaVL2GqWFFYN+m2r2PnVt/rjDC4ATqyYErRsfsO8lSdEW8vKbwhOz1cWX
MKYPyTgONwerWjJgm4WizcRAJlZ5zFSwX5jgyY/cYc1ajsQ+j4Y9rb3yuvDS
20PX31TnTQe7HncWeEMABs1AkRMU2U8Ph59/pch6UDBc3S3JDWmbB4gXA7yV
bl1LJ2qzw0RB3hz3D7UlF8mBJk4FL8AzJ3/VB6ylbpU/jPPbfTZq+3JFdzWo
KYUM24ziJ2nrJEPHVAVjqVpULOQIFVWXdE3H1c1zCT5g6QAEdQubMrkyDqvw
dOR196yQ08z+kqU18RMKb44qj39W1P4zNBBPD1pIg3OaDWmUU3YbNNRk4+WT
/HLbtach3i0y28PoNdrEy0JBq7n4gvjMAkUxT1nTPhTk1ZXepUj1kx3+hLX3
6ZIfRzetGx+6Frhw6iMNO5VWNlCEmaJHpk04i8OcdpurMsxpDcIkbcAxAwXZ
KIsQ672OMvejRRtMiYslQXOEvl8qI141MZ7CxeMcoqTsn5BYvKuZ3ckqcT/H
cP03DHdaScJ29M4HhhYBPQvcBo8tgVjl+ou7jZW3JIUBtQfnhe5NSt60hrMC
qF8FJPw4L3THidKVj5cc/UTe+QyNjiXt4wl4FC96gqZ6gl171DKoM7Zl61vO
Iz2vkRwAZAOS6mUd2RE9NS+X3loZuDmjMqe8p+lmwrX3m3JesQgTUY2Qking
tpvoQANu7LY0bEWaD9NKGS7nETbcWuMJNfthdbdwT8Di9yYyVGWoCraW3DT2
20T5jUM/jeHv2dF8q4gfcgLNPgmGLTUfmsjfOT5849iwU19ZrAMuMxLDXTEs
x3Hh3EHOMCVGOFkFXNGNEXrX24YFaaNACWZogQfSjOUhsugt8ojZuvzpIHcc
Jn8It66lyR7XsqH/z0X9c+HKTiszfTu3vNG3YabiwAJtdpQi8UTfrq9ZG59v
/Q5oPfJT5Y0bdasm1q1wK10F5J4JjNs6P2k+wPAai4HjKHAUbZwM8SZ0XhmH
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
CQ==
      "], {{0, 155}, {150, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{94.2265625, Automatic},
    ImageSizeRaw->{150, 155},
    PlotRange->{{0, 150}, {0, 155}}]}], ";", " ", 
  RowBox[{"ImageDimensions", "[", "img", "]"}]}]], "Input",
 CellChangeTimes->{{3.781027863130453*^9, 3.781027877681403*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"dbf94491-199b-45b3-9563-4235503e326c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"150", ",", "155"}], "}"}]], "Output",
 CellChangeTimes->{3.781027886947369*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"12e3c2cf-3c98-4959-a4f1-272343634fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"imageenc", "[", "img", "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.781027898720067*^9, 3.781027912504167*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"77f95a29-d8c2-471e-a1da-f921ebf64e89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.7810279200570717`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"482af2c2-04b6-45d9-9acd-05694a07dcd8"]
}, Open  ]],

Cell["\<\
While encoders can be used independently from nets, as we have done, it is \
more common to attach the encoder to a layer.This can be done when creating \
the layer or afterward.Here is an example of creating a layer with an \
attached encoder.\
\>", "Text",
 CellChangeTimes->{{3.781027937912176*^9, 3.781027967717833*^9}, {
  3.7810279978327503`*^9, 
  3.781028041266412*^9}},ExpressionUUID->"7fd224f0-96b4-4a7f-8dfa-\
54ae0092bfed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pool", " ", "=", " ", 
  RowBox[{"PoolingLayer", "[", 
   RowBox[{"10", ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", "64"}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.78102804747815*^9, 3.781028090986133*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d6c5aac4-53e7-4544-8185-8b5a0b074ede"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PoolingLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Kernel size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Stride\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Kernel size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Stride\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Padding size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["Max", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensionality\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Interleaving\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"55\"", "\"55\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PoolingLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7810280937070713`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"d80e769b-b50e-4776-ade7-aeb7183cc535"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", " ", "/@", " ", 
  RowBox[{"pool", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 64}, {64, 
      0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
      Rational[1, 3]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->Magnification[0.3333333333333333],
    ImageSizeRaw->{64, 64},
    PlotRange->{{0, 64}, {0, 64}}], "]"}]}]], "Input",
 CellChangeTimes->{{3.781028114576565*^9, 3.781028114581689*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"07d68e28-880d-4409-a795-2387953bcd07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJztnF1rE1kYx4f9BMdWQ9pMUvwGVZRVWUk+Qoy1VkEKC15vUETF0s7lXgat
Gm1M72QRWSq9MNK0jYL75gt1s92+mq7r1qpb61z4sogWe07OMzuek2kmycxk
pjl/KH8KaTM5vzzn7XnO2frtd7GjX0mS9DX9ERJymxBKhOv9DEK8/P4fMJdI
NDqBXUmnC9jVN2/+wb5rz56X2Idu3lzC3r59+9/h4t9NE9+06bbgaqM2b+4n
7dvcnMeeOHfuKfZUKrWMva+v77XOlcHBQeLj4+P639nXSR8/fXpF/l9/P+Gs
XLo0I3jWIISGcLvl5ubmsHcdPvyyVLsbuMaNcSmdTq8QTonEX4SLLGcFnxpE
x6Hc7Ows9szIyL8m+OQWFhb0jqWW4tV16NALEk8XL/4sOFkghMi4tGv37hfr
xAn0d1jqOs7xUt+9e0bj6rrgVYMQUnT9lBEnNn7KOTeOnTp9msSX1Np6TfCq
QYHACG6/6MGDS+uMQ1hmOIEDXy0ee3t7yfglbdlyV/CqXsr586T9/IFAqfGq
0rhineOuzTeEqpKSTP6C2y+bzZaap2NVwwlcizPgBfP5tXVZRnCrQrR/mp+f
X7agHzR09nsA6y+hCkW/56fOnNH3h5bzkgy4SS0tM4JbBaL7GPGTJ5dKtqe1
vLTxkHufYPCB4GZeMA+wmRc4x62tra34fmJfypxCoYcWrLsqdY5boVBYofE2
KritI1lO4faZnpn5Yn/D5H5GrS64VatAYM7OeWIZF9wqVSj0I26Xnp6eL+b3
DsUZuOBWoSCfYvf8vowLbmbl9ydxe/z34YM+/+V0nIELbiYVicV+17eTzfP8
ci64mdREPv9UcPOQfL6ruB2Y+o169Y/ggls50Ty0S+IMXHArI6hnczs37bl8
vp8EN0lq37lz0YXcNGefK7J/f76hufn93+PPT+tFtbqNOo9rnLPcEEKNnedG
KI4/P63vrdd+Vjnnnitz61axDojWHTWqorEYqcfu7u5+rXfJHdzAOX6Rffse
NTK33NTUlBe5ZTKZ5w0ddzQPCXlJys3u/Fq1zvfnoVChIbnRcS6ZTD7XcXPb
OAfO1nf9328eODDZiPwiR4489gA3cO68QDgcLvLr6pr2NL9K664RyuHXj42N
rYSdq0eo1Vl+2jomfvw42W/1yjmcXD5f07qUngN067rAyFlu2nN/s3cvqZNt
37btCXl9S8uvlGeqLjybm4fx+yoXLvyJHerxoX64asnyfQ9yY517fnb9DvXw
8RMnyH5R4uxZsh5CTU2W+tDwMIl79f17wic7OvpK/1zI53tm5fdHfft2cQPw
M9zndNgNz1cqAwP3rOS2Fsdk/5auD7wy3pVzw/7UYW5S+44dttbLq6rqZL3r
RnPu+0H7SfvzUTSvypy7dt3+s8vcOA8F9zs4pdbW3/D7wTqBcvN6v2mbu+0c
0dp8dTrM99eCH+0X2fGS1nu75hyzw+c83O7cvIPWDUtKIpFzAy9WkAdi5k2N
En8cLzkYJPMOr9zDMXTjxhP953Br/twi53nJ8rKXeLFSrlx5XKr/9Hg/apiH
0PLvTU13vMiLE71fy6Au0zNxaPT9i3Z0FOeH9BzMRhOMy3QfrtZ7guxyw3gC
TjBueT5PVKUinZ1kH5yeHzHkaPP8xvS+JexHuXVe6LjoekZJpeaxJwcGzNyv
xvI04srl48zuJ05MTi7S/u+h4GRCcC8o7Yfg/k/IY1u93wvjbvzYseL9onQ/
SMgiwf1bwSCZp0Y7O0m+CvKhRlxWV1fJeQLYVwU+kY6OP8j/E/fm1Ue03ZXL
l0mcQD0hzGOh7kLcuyxUN30G50Ulyg==
     "], {{0, 0}, {55, 55}}, {0, 1.}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztXFtvE0cUXvUXbASslthx1H8QIVABBTk/wfIDGCQUqRLPWEgIEFHixz6u
yAVHWM4bqqqqCkiUoDiJ+1BKW4qimDbXOhcIt4bWSIAqVCQ845ntemdnvWvv
1T6fFH3KZbyz55szc+bMmXz+5fnkuc8EQfiCfAEAQYMoKnG/+wBgIctfI10G
EolFxJl8voy48vbtU8RHjx9/hXj67t3niPsOHdqJ19qtYO7q+gF0dRH7949h
++7bV0KsjI4+QZzL5fYQj4yM/KPhzNTUFOaFhQXt9/q/E8rl8t+IU6nUC6z/
2bN/gp4tQBSnkd2K6+vr2K5nzrwysjuHLevG4/n5eazn4uPHT4kfPwIdDUDW
oeLa2hrimdnZvyzYt7i5uallhIoNpu2ovg31nL5zZxe3P3jw547WURTxunT0
2LGXWj/RM7WrYE+XZlnVU9cPVb/e3l7MlUplC7eTpJttraMoZvD6pChbJjo1
6z+uM88PZ+7de4nn0xs3fm0r/SKRWfQ+iVOnnhutQ3Q8CwHRpwFz/ZGui9V5
dDXM+mXGx39E/ZcjEaP1KrB+ZZN584aQTqe3wqRfJpt9gPpbKBSM4nSEINjb
adb7ofq+iWRyJ9D6HTiA/WtjY2MvxPOgY8zEo7dubQdKP1meQf25fPWqdj7s
WL10zIxfdX/vF0geI33pkjbeaPf50C5z45ji0tKSH/qReB70suh3+vxN/4kT
r/Hvo9GCJ/rFYo8Mxk+7xIduM+N3iZMnn7mqWzSaQ5+/srpal9/wOJ/RLszG
bZL0hyv6RSLrhs8Lhh3Cxsy8SfOyQnf3N47oF4t9hz5naGioLr4HP3PH74rV
jZQTutHzFIjvvfG7/v7+vZb8TpazqN2/Hz5oz7/Az9z1OzUuH0ilVprRbSCZ
XNJ+DsT53uomyzI+hxdEMW1Hv8VS6Qno5hmr+yjG3iR/2BDkHFBXv+H3/Kg/
33aL/Xo/lRndenqs5cXIObRPfsYddz6x5+NV3w9lYsLSvpzWs3mkW8O6AD3T
OgFaj+UUDw4OGurGO19z2R5qPzT5sG/N9Os7cmTXA9249vjv40fcT2VsrFZP
NTmJz48zudxD3J7WycVi846yJN3HzxkdxfV+oiji/Gt2ctKw/sUlP1R1o+OI
shCJGNdByPJX6OekXlTdVzjcP0anfD6PxzvNU3uWZ7UKYhcaX5M4j9rFtfVR
r1txeXnZ0C4k3iT1vU7PC8znpU6frtXTXL/+U6B0sopYrGygW6v68f2N1P3y
QM/VmXYO6VV5//4Z8SvT+TosyIyP/47eIx6Pa+enVus6VbvT9bzqV0Uze1F/
bFE3Jn9z+coV7F+O5U2Dhtq9g1bPt9R1idqd1mvT+ZoLsu5TnUl7q89n6oCH
h4dr9WlW948hB7m/0PQ6Q+NAqtv07dvW6orIOpfNZl9o2lt9PtNfNd7oFEjS
9+h9SfxuO/7U61YslUzXNT1o/YpF3Zg6NBrP07qhToPY1bVtw++Yewq0jtH2
ukLWQVKH23C+Zvb5ZP/VsZDlB3Z00+cb0hcutFR3Se4BNnw+s08Peb11yyD3
jEi9dqP5ktGN1g83jWj0oYlu/Dx2T89vHa0bQfriRbP8E2NXUZIcrROqvHu3
axbn6vOHcG+zBuXatR0D3bh5Wafv9WQmJu5rdOHqRvO0VX+bA92q4/3Nm20D
3Ri9+g4fdjUeoPf1ePl60K0eDXQTCnNzrz2xFzlX5d27Bt3qwdHt/3WO/n8H
r9Dd/YtmnwC6ccDTze99UjVeXQHd+NDrRuq9A5Onpfks0K0eVDdSNyxkFMU0
r+8X1PuVoBsG1S0054ygG0Zo9AIAAAAAAAAAAAAAAABQwydDiFt0
     "], {{0, 0}, {55, 
     55}}, {0, 1.}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztnGtLFFEYx4c+waS1bDqr9A0sgiKM3Y+wmckWhBD0uqUICkTnZS+HEpPc
1ncREWFJtNGqW9D9gnlJBVvNtKvZvrALUdKe43mm8Zw5ruvO7p5xzh/kj3hZ
d34+5/Kc5znbjx5vOLZJUZTd5ENKSjSpqhEs998gxcrvv4K4hMLhQeR6PJ5G
nllcnEW+Z+/ez8h7bt/+gLxu586Z4PLPjWPfvPme5FpEbdnSjp9vZeUwcuP8
+XfIY7HYPPK2trZvFte7u7uxDwwMWD+nv09Jp9MLyCORyEfM/8iRN5JnCaRp
SczRMKaRx+PxBSs3yhluPO/v78c8B0dGZkkcv5Qciyf9woVHOH4OHfpkxy2r
jMVTU1NT1rjMybPn1q05/PPbtj2RHIsgTbuG57kfP96vgR/tJk9evNbW1mLP
ZDI4zhWf77Lk6KCqqq6i53n6zJkV8QfxpazOj3FeHCbu3PmEx9OurmeSn4Pa
uvUBep6tra0LFm4QV0j58OPGI8yL2XF0QvJzTmT9ku+4mcu566BoNDot+Tkg
vz+BnuOfv3+/Wp7veuOOdjoOzXE03NAwI/kVLqO9fdZunlIK48Y4sx69ceOt
5FeAyPxTbG6K/Tj6f38vlZ8CgRc23JwaL2nnrmNSQ0NDkl8eInks2IcVmRs4
k3er37fvK/46yftI5VAg0IeeE+QnS8QNnIm7cFPTe8ltDSovN3B2P+LzvZb8
VpEg3OhxM3H37hf8dZLnkaIkBjdwdr0yOTkpudlIMG7MeqW+fl7GnY3E4gbO
5FlCkci45GaRS7j5/X58Dq+oalTyU0TlZr4+k8ch5xmel5jcTGe4BQIyL4bk
Mm5GR4fclyP5fA9tno8o3Jjx0pIPu+ZlfqEDB4Ztx6Myx5lCcWtubl7hSnW1
p+sgVFWdFpib6TS31NjYmCe5qaqO3jep43G6XsEp58cbqfv1mkL7978SmBc4
ww3Om7L/dylPcYM4SyQ+uoCbWScI3CKHD+M+h+xG/KynuNXUpF3Ay3SYb4Fb
z82bnqorCh08OGrDS5T1PtdpbqnhYU/Ma5CPDQaDVk6i82L6FJLJ5PrOBdwy
D5L6jOjJk+8s798tvMCZvHL0xImCxkfoA9Q7OpbP0Ssre8vCU9Ni+HVJP0zd
jh24HpHkE+j6f7fwAme46Z2djwt6zpr23Pp7k319OO+S+fkT93H29PbiPkK1
omLGSTfOncMePXUK9y/5q6u/WN8X3aco+nqD48zfr/p8juYjM9+/z9m9zlr7
AYvkbosrcG5dpdN9PdlxEudjyT6wVNzcPv7xnOFVt2vXrJO8aEG/nuj5PUGd
qSeBeQfOl4om0l8J+3iIi/X2A3rE+efZcL9DqVRV9RS9HunX22jjmOPOnIeS
vqByKbteHQ+6MC9RImfWAeMTE7ivWJQ6O7iPQs57K3iZ3FpaWnD+QzcMIfMZ
0F9JrQe9En8MLy0QwOsOuKdDdJH+Sub+ng26fmF5adq8m3jR0i9demM3frp8
HOXum+FeDKWi4r4beTEi5+zUvVqui0Pe/1+4sXF5fVhTc31D8KIE8zLJw/Hu
kSg3x5z3BsG85dU6/lBTEz5n+PX79+fVOBZ5fcPdF9MO+ShR14UlF9nP6LEY
7v/q7Oqyy//z8pe5ztvyvkcNfHB0dI6Mf/JevLUI7gUl4xDc/0nOsR3PY8O8
a55XknyQlEOC/hTS7wB97VCPzeOytLS0fE8oyasCn1Bj4wj+fR6v4y6byHPX
L17EcWLW90K9KNRdyHuXpcqlf4wKLvI=
     "], {{0, 0}, {55, 55}}, {0, 1.}],
    Frame->Automatic,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.781028121899269*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"d4504fb6-fd58-4dbe-a4b7-a1aafc66f376"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   RowBox[{"pool", "[", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 64}, {64,
        0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
       Rational[1, 3]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Magnification[0.3333333333333333],
     ImageSizeRaw->{64, 64},
     PlotRange->{{0, 64}, {0, 64}}], "]"}], ",", " ", 
   RowBox[{"Interleaving", " ", "->", " ", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7810281562086153`*^9, 3.7810281858273783`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"dccdfe03-e17e-48f1-b3ec-3e4be7556d8d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXVdsHFUUXYHoICHBD6J/AIIPRIkA4ewsvTcFkJAQoNCRIgEBiY4ciZKK
gmgiQOJQQ3cqITSTalMdcEKAkAQIoiiAQ3UogT3v7XlzdzJvdnZ3mu2xdHJP
7JnZmffO3Nfufbv3xVcPu3yzQqFw3dblf4YNv+HokSOH33T2lvjPZcNHHHrI
iM3L9PAKwAuF1lKOHDn6J35Zf62x775ziuKwU9v2Uhx21sxDFYdds/oixWH/
+fsWxWlz5KiF5cvONXb8uO0Uh31k0iQHHHZ6e3sRHHZUa+tQcFg7LxQ1LxRn
zxqirgP76YoVisO+/NKB6rNgpebTLo8c8eK3X68zdsrkPRSHvfOOO5Q2YN/u
6FBagg2nt+h5WaNKw7BSt++9e6q6Z9oc/Qe//jLS2Hsm7KA47ITx26v6ha1X
J293HFXR6lH4fUvl9y2SF0y/nD+aVx9fqFyz0JRun3j8cfUssAsXHKuekTZH
NvDM0/saW+7PqfqClVoKw8NoLG7u0XxdWn3j9dfVs8OuXnWhKhPaHPFAlvOU
yZNV+cOG05vro9LSW1RaDXinjD5fnTtX9QFgZV8l7TocCJBjWNnX8owjRJvY
v7XXDA/jS1+bN0+9y7Dre69RZUubw46xY7YxNkw5Z0EPWeNh/GpX50lKn7Ar
Pz9flTltjtbSN2vXOl9/dbGytjZ3MPvAqLhNnxv6+lQbBLu0+6wSkbYuksbn
n33mEPB30GTQODcLdTqQuE2f6IN+uWaNAzsY9PnnH384BPR378Qdi2yLqcks
1Ndg4159QpMVWyQwtiTS1lGzmPzY7gYcH/LZoUn6w4omc3+YAX1Sk/QXwKKF
xzkE5n+JtPUVFlhvIKa27VUkOF9csS0VP6l0CE1mpV4GO4cmYaUmJV6ZM8ch
0tZaEH7/7XoDrOkS1c/jahLPDE2yHHJNZocLTbZU6q7Fps+2KXuWiLQ16MX6
3l6HsN1/5TmH8tlzTWaTU5P4cevN9Sfse+n+18QigTok0tLhxx8NMyg/x1BC
3jPXhqUmyTnGAfeOceLmul/P3xfkMYn2aTm3wHon57jD1UVy3Nt2e7msXwms
axJpaXJqW5tD2O6T5e73bNAv+aovLkhUkw3wprRarb1kNVYv/2T58pqapK+x
1XtX50klIm4ddi450cDvXuDDWRvlezb9kkULF5rnXL1q1SZ88aLjS+T4nDg4
yxr82WnTDH/s0d0MD+NXJQ/SofR1Yfyevg/N9f1pru9bc/088XKWDTjLAPUn
9GnadtS3nw4Qi0DErcnp7e0Owc9/+ql9jD5/XDeilr/wrY9HH9m15B7fmijf
0Hej4R+8f7rhP65bZ7Sq43k197b7o3xi0rw6ZDwwuL6u5vrzNNf3kU4Z6Ph3
zeU7auvjFCo/sr6lDsaNHWvGFR9+cEaJiEqHiN0nOK/D+2W505fX8h02Tbrz
CsnXRxi+9utLDO/q7HRcHfprEhzH8Rr6/PSfw8a7PzzT8EbaBHm80ITS5PT2
g1RsMuOUo8C4sdsqgJf7jkMB7+eHuV/8K3Xrac+MH/nu2ysyUU9e7t67yxED
JmPUGRPmd2xWnsOP//zTT76+sV5NVscmuPEyS7u7i0Az8+3/bbxdAbzsnx0g
Ck1KbutvYe0xC/Xk1ZN7j9X8+ecOqLJBx2ZJnz98f5XhQX2TMHXpx6UmpW7g
N4F6NYlxMADOOR7vtcO21zYeMA9ifCZzt9KosyBtjb57q8Dyk3+3XSOtZyJf
snhxJL7Rxm2aXNbT4wD1ahJ5oW6OqHs9yZu5Xy+3jQ2Wdp9lfKbr7xurg2Z1
+P13V5py3PjvbYHlJ/8uz0tbn3q9RXObDqOao5XtuNQN1/jA//3nVoUwmmQc
WVKalNzWpt87caLRp5tvumm5x6XJ1+YdWdd77XdeGpp87tn9hQ47ElsrkO2o
1I1sdzl2tpWd7EMiv5S5prZcl6juPYjb9Lms5xyjTze+j+dFp0PGYwO1fKMN
8jx5vTj1qfsOrjZq8Tjqz6ZJyZHXwhwXP0g/+urcIxyA75NfzHcczxHEbfos
95dN/1OOj+qZf3Hnpar5fxs3RjrnK69n+8xa96vrSPNX5hwmfy/m/v19YNJr
p+Q2Tco+Yi28+MILDsDyYplJnuQzeblNn7b5JTn/OenhXUwdL1l8gtEEx3Tg
X305XPGZMw4pkQPNclyPnOUoec/HZxuNzZh+sOFay5q//95pNccmWcgRCeMn
3+k6WSGMJu+6cwuFrGpSctucZ631PHcdXj8X+zjgOmZJa4QcaJZrzWnOz5Yc
dSXm4Ota54xqvBwVl5qUusG8E9e1MC4IuxdNx1slhf6gSRuvFffg1aSfRtx4
peD2NixnHJfUvU/5BmoyCz4wDLfp5qEHH3SAMDqUYHwueGX/Gp/yS69vGVGZ
ed/jFqHJFqFJ3zWZRrjQZIvQpHw3mprzzRK3aRJ7g3GfsEaxYP58Bwj6nCyU
QQNlJvv+xve4scatJTfWmOXRHHfjXRnT7OvH+60mbe215FgHcddCGgPGdnp8
l2uyWT7QNekXgwGOOQE9L1A959go/tpwkwI49ofiXlH9vR3PNRk9t2kSsSlx
7VlULkcF72cmPZceBc81GQ2X/kjqYH1vbxEAjzP3Fnsecd8j5qNv+n70D5+Z
azIablvnmzB+e4U4dGjD/fftpBB0X1koMxvPNdk4t/nGMaO3dgDwNPYlQKw+
4/W5R4L3HrPsM3NNNs5tPmjaM/spJKlDG7B/Mfcwtt1v1ubeck3Wx231iu8f
4HcRZBXcp4p1ndW5I5sm9Rqj5noNnOc2r0muqYNzLRM8q5q0tdFyfRCxLm68
Szbx9183K4CPGT3aAbKoT5smJUeOr3tu85rU1/PVYWY0Kdszm2+cPWuIQtpa
awTI92LOV7mtcgCvJrMwJrJpUuf48vjmNSlzhm2aTOP5JbfpUOYKDhTINaWu
zs4iEFQGSdaDTZM6xo3HN69JGTOXJU3a2jDsnQykrZ0kIHPQmWcZVDYJ1Ilp
xz25KWa8o/09zw2vQ5kbPErEdHpi6RJpr23tsixrmfcyWLGs5xwFcOzBwD1K
bPqMe/xui0nU4zYeH16TMvbdFt8Z9TN4n8evHZJ8Q1+fA6SthSzim7WXKoBj
fw/Aq8m42/rqsU9B6tP4TN0H4bmb6lDmAMvcYDlXG/V7FWZsIvcxQd/W7d/m
CAPkVjG/Ss4vhXnvo/KlHk0arnN8NddrFdW5vjIHuLqNjnb9IKAtMRx5aeK7
RxLZ62ywQcbAf7riPAcIr9XG15X82nTE7escX53rq+P4o2mjw/g9qT2Zo8r9
acFlfHaO+IH9wPid2A/cv7MCuFx3DeNLbP1VP3+L3F1qEjm95LA6x1dzneNb
W2+2PXbC8KeefNIBwLFHm7tPW46soffnqxXAZXyd3IOhVp1jbYKc358CIHeX
vorw7qkM4Di/8+V1g+5D9v1mzpjhAOAL5h+jkHYZ54gGXGMCmO8OYO8cgvlH
/G5HP3j1SFT/3v9czAdhrRvAfGW5XVVAji/npblfk7sWmWMwA989T7z1pmPA
/GJA7g3L/RkA7h8CfLFypYH8foRcbzniBvu07NfmyJFjYOF/eqY16g==
    "], {{0, 55}, {
    55, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> False],
   
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{55, 55},
  PlotRange->{{0, 55}, {0, 55}}]], "Output",
 CellChangeTimes->{3.7810281884306917`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"c64ff85d-ecfe-447b-a669-a8ee3df82d62"]
}, Open  ]],

Cell["Create an encoder for MNIST images", "Text",
 CellChangeTimes->{{3.7810282203260193`*^9, 
  3.781028258626169*^9}},ExpressionUUID->"b69f886d-042c-4c68-a737-\
e7f0b37e20fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistEncoder", " ", "=", " ", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", 
     RowBox[{"\"\<ColorSpace\>\"", "\[Rule]", " ", "\"\<Grayscale\>\""}]}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.781028262613572*^9, 3.781028302676567*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"43be0a75-63f3-4f40-95b7-168b7700f857"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Grayscale\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["1", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Interleaving\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781028309459147*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"de8b0d90-bc96-4a1d-a4f9-67935e6de94a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingData", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.781028311035397*^9, 3.781028316262237*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"2038bb70-b2f2-4ab5-978d-bb94d20d89aa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9YcCaBKeEsdqnzgszMzEJYpU7KMDELiDEf+4kh8/WwPDMTs+lqZqZW
DLkYoHlMzMzznZgiMJwhyMTk2MskfWEDQzgWZ/h83tL26v9/Jh5Up96MYhLT
Xw1hMzFHIUv98GXm3/HmMUzOBlnuGDPzATgHTc6SyRHBYWCyRpLazMncj+Ax
MWcjya1ilnwGt7qCyfUzipwCXKqGWW7HfxS5PJg3o5iDUDz3fyWTHITRK8gU
iyoF1MeWe/7RKl85JoWI4xhyzMxSGkDCuvY/OnhsAY4CsTwMGSB4Vg+UK7qF
TYp+AABdfKAq
    "], {{0, 28}, {28, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{3.7810283174608097`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"bca5082f-602d-48c5-9575-95576f5689b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageDimensions", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.781028321832245*^9, 3.7810283298301573`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"fc7aa323-99a7-46ce-836f-b242e2fa2efd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{3.78102833047386*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"7b7aedff-24c5-417d-a29d-393bf99d121b"]
}, Open  ]],

Cell["And a decoder", "Text",
 CellChangeTimes->{{3.781028356139382*^9, 
  3.7810283609333067`*^9}},ExpressionUUID->"51975c26-9960-4487-a235-\
8ad0c6a9f609"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistDecoder", " ", "=", " ", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "9"}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7810283663185377`*^9, 3.781028403325665*^9}, {
  3.781028458529409*^9, 3.7810284597328176`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2b21ce8f-a80a-4af6-ad35-42eb1ce5ef2c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "9"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Input depth\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["1", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781028405547477*^9, 3.781028464088464*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8f2a9df1-f304-4e1b-accc-a4a6872d8e59"]
}, Open  ]],

Cell["\<\
By default, the decoder will decode a probability vector as a most likely \
class.\
\>", "Text",
 CellChangeTimes->{{3.781028488577359*^9, 
  3.781028525647715*^9}},ExpressionUUID->"c1f1bcd2-4e8a-4361-aafe-\
2c6d2d2dae93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistDecoder", "[", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7810285302834463`*^9, 3.781028558860509*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0cc9e9c6-ac04-4308-99c8-cbc91097e184"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.781028559736422*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"70507f39-da0a-43dc-9cb4-37c38abc22fa"]
}, Open  ]],

Cell["Obtain the probability of a specific class:", "Text",
 CellChangeTimes->{{3.781028619036734*^9, 
  3.7810286339163923`*^9}},ExpressionUUID->"2ceeaacb-f3ad-42e0-81e1-\
631b6c96d3ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistDecoder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", ".3", ",", ".3", ",", ".3", ",", ".1", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Probability\>\"", ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7810286381321993`*^9, 3.7810286902246513`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"c45d6783-c648-4f41-b92e-f9ac03a1ff24"],

Cell[BoxData["0.30000001192092896`"], "Output",
 CellChangeTimes->{3.781028691229846*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"27ab9eae-57a8-4857-93f9-31a085f09571"]
}, Open  ]],

Cell["Obtain the full list of the probabilities as an association:", "Text",
 CellChangeTimes->{{3.78102871581385*^9, 
  3.781028750966776*^9}},ExpressionUUID->"89e4872c-682e-4f5c-9917-\
8e6641693c66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistDecoder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", ".3", ",", ".3", ",", ".3", ",", ".1", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}], ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.781028754324589*^9, 3.781028774177711*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"bdd3bdbf-733a-4fd6-b3d5-d918f314faa8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", "0.`"}], ",", 
   RowBox[{"1", "\[Rule]", "0.`"}], ",", 
   RowBox[{"2", "\[Rule]", "0.30000001192092896`"}], ",", 
   RowBox[{"3", "\[Rule]", "0.30000001192092896`"}], ",", 
   RowBox[{"4", "\[Rule]", "0.30000001192092896`"}], ",", 
   RowBox[{"5", "\[Rule]", "0.10000000149011612`"}], ",", 
   RowBox[{"6", "\[Rule]", "0.`"}], ",", 
   RowBox[{"7", "\[Rule]", "0.`"}], ",", 
   RowBox[{"8", "\[Rule]", "0.`"}], ",", 
   RowBox[{"9", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.78102877582576*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"0ed24386-d7ab-4a01-b063-d6d48f7e53ae"]
}, Open  ]],

Cell["Obtain a measure of the certainty of the prediction:", "Text",
 CellChangeTimes->{{3.781028785879446*^9, 
  3.7810288229399567`*^9}},ExpressionUUID->"4c3ae788-ee94-4a8a-8fc6-\
b9390b95433a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistDecoder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", ".3", ",", ".3", ",", ".3", ",", ".1", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}], ",", "\"\<Entropy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.781028825974595*^9, 3.781028825980851*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"2421dc7f-6241-42c4-b95d-823b31f2f943"],

Cell[BoxData["1.3138340424283852`"], "Output",
 CellChangeTimes->{3.7810288286543703`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"cbc84817-82f4-4589-9de1-0c9a0331fd67"]
}, Open  ]],

Cell["Attach both a NetEncoder and a NetDecoder to a layer:", "Text",
 CellChangeTimes->{{3.78102884502861*^9, 
  3.7810288608163424`*^9}},ExpressionUUID->"38958bde-d200-4668-98a8-\
a161a46e6099"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pool", " ", "=", " ", 
  RowBox[{"PoolingLayer", "[", 
   RowBox[{"10", ",", " ", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", "64"}], "}"}], "]"}]}], ",", " ", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", " ", 
     RowBox[{"NetDecoder", "[", "\"\<Image\>\"", "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.781028865183572*^9, 3.7810289260143223`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"393a1b8b-ad8e-43bd-948c-f62ba0be42bc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["PoolingLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Kernel size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Stride\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Kernel size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Stride\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Padding size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["Max", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Dimensionality\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Interleaving\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("PoolingLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7810289375188828`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"406a2a39-ac88-499e-807b-bd967214a8a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pool", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 64}, {64, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
     Rational[1, 3]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Magnification[0.3333333333333333],
   ImageSizeRaw->{64, 64},
   PlotRange->{{0, 64}, {0, 64}}], "]"}]], "Input",
 CellChangeTimes->{{3.781028960799972*^9, 3.7810289608059893`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"fceb8851-e1df-40f1-a8b7-80bb129eff6f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXVdsHFUUXYHoICHBD6J/AIIPRIkA4ewsvTcFkJAQoNCRIgEBiY4ciZKK
gmgiQOJQQ3cqITSTalMdcEKAkAQIoiiAQ3UogT3v7XlzdzJvdnZ3mu2xdHJP
7JnZmffO3Nfufbv3xVcPu3yzQqFw3dblf4YNv+HokSOH33T2lvjPZcNHHHrI
iM3L9PAKwAuF1lKOHDn6J35Zf62x775ziuKwU9v2Uhx21sxDFYdds/oixWH/
+fsWxWlz5KiF5cvONXb8uO0Uh31k0iQHHHZ6e3sRHHZUa+tQcFg7LxQ1LxRn
zxqirgP76YoVisO+/NKB6rNgpebTLo8c8eK3X68zdsrkPRSHvfOOO5Q2YN/u
6FBagg2nt+h5WaNKw7BSt++9e6q6Z9oc/Qe//jLS2Hsm7KA47ITx26v6ha1X
J293HFXR6lH4fUvl9y2SF0y/nD+aVx9fqFyz0JRun3j8cfUssAsXHKuekTZH
NvDM0/saW+7PqfqClVoKw8NoLG7u0XxdWn3j9dfVs8OuXnWhKhPaHPFAlvOU
yZNV+cOG05vro9LSW1RaDXinjD5fnTtX9QFgZV8l7TocCJBjWNnX8owjRJvY
v7XXDA/jS1+bN0+9y7Dre69RZUubw46xY7YxNkw5Z0EPWeNh/GpX50lKn7Ar
Pz9flTltjtbSN2vXOl9/dbGytjZ3MPvAqLhNnxv6+lQbBLu0+6wSkbYuksbn
n33mEPB30GTQODcLdTqQuE2f6IN+uWaNAzsY9PnnH384BPR378Qdi2yLqcks
1Ndg4159QpMVWyQwtiTS1lGzmPzY7gYcH/LZoUn6w4omc3+YAX1Sk/QXwKKF
xzkE5n+JtPUVFlhvIKa27VUkOF9csS0VP6l0CE1mpV4GO4cmYaUmJV6ZM8ch
0tZaEH7/7XoDrOkS1c/jahLPDE2yHHJNZocLTbZU6q7Fps+2KXuWiLQ16MX6
3l6HsN1/5TmH8tlzTWaTU5P4cevN9Sfse+n+18QigTok0tLhxx8NMyg/x1BC
3jPXhqUmyTnGAfeOceLmul/P3xfkMYn2aTm3wHon57jD1UVy3Nt2e7msXwms
axJpaXJqW5tD2O6T5e73bNAv+aovLkhUkw3wprRarb1kNVYv/2T58pqapK+x
1XtX50klIm4ddi450cDvXuDDWRvlezb9kkULF5rnXL1q1SZ88aLjS+T4nDg4
yxr82WnTDH/s0d0MD+NXJQ/SofR1Yfyevg/N9f1pru9bc/088XKWDTjLAPUn
9GnadtS3nw4Qi0DErcnp7e0Owc9/+ql9jD5/XDeilr/wrY9HH9m15B7fmijf
0Hej4R+8f7rhP65bZ7Sq43k197b7o3xi0rw6ZDwwuL6u5vrzNNf3kU4Z6Ph3
zeU7auvjFCo/sr6lDsaNHWvGFR9+cEaJiEqHiN0nOK/D+2W505fX8h02Tbrz
CsnXRxi+9utLDO/q7HRcHfprEhzH8Rr6/PSfw8a7PzzT8EbaBHm80ITS5PT2
g1RsMuOUo8C4sdsqgJf7jkMB7+eHuV/8K3Xrac+MH/nu2ysyUU9e7t67yxED
JmPUGRPmd2xWnsOP//zTT76+sV5NVscmuPEyS7u7i0Az8+3/bbxdAbzsnx0g
Ck1KbutvYe0xC/Xk1ZN7j9X8+ecOqLJBx2ZJnz98f5XhQX2TMHXpx6UmpW7g
N4F6NYlxMADOOR7vtcO21zYeMA9ifCZzt9KosyBtjb57q8Dyk3+3XSOtZyJf
snhxJL7Rxm2aXNbT4wD1ahJ5oW6OqHs9yZu5Xy+3jQ2Wdp9lfKbr7xurg2Z1
+P13V5py3PjvbYHlJ/8uz0tbn3q9RXObDqOao5XtuNQN1/jA//3nVoUwmmQc
WVKalNzWpt87caLRp5tvumm5x6XJ1+YdWdd77XdeGpp87tn9hQ47ElsrkO2o
1I1sdzl2tpWd7EMiv5S5prZcl6juPYjb9Lms5xyjTze+j+dFp0PGYwO1fKMN
8jx5vTj1qfsOrjZq8Tjqz6ZJyZHXwhwXP0g/+urcIxyA75NfzHcczxHEbfos
95dN/1OOj+qZf3Hnpar5fxs3RjrnK69n+8xa96vrSPNX5hwmfy/m/v19YNJr
p+Q2Tco+Yi28+MILDsDyYplJnuQzeblNn7b5JTn/OenhXUwdL1l8gtEEx3Tg
X305XPGZMw4pkQPNclyPnOUoec/HZxuNzZh+sOFay5q//95pNccmWcgRCeMn
3+k6WSGMJu+6cwuFrGpSctucZ631PHcdXj8X+zjgOmZJa4QcaJZrzWnOz5Yc
dSXm4Ota54xqvBwVl5qUusG8E9e1MC4IuxdNx1slhf6gSRuvFffg1aSfRtx4
peD2NixnHJfUvU/5BmoyCz4wDLfp5qEHH3SAMDqUYHwueGX/Gp/yS69vGVGZ
ed/jFqHJFqFJ3zWZRrjQZIvQpHw3mprzzRK3aRJ7g3GfsEaxYP58Bwj6nCyU
QQNlJvv+xve4scatJTfWmOXRHHfjXRnT7OvH+60mbe215FgHcddCGgPGdnp8
l2uyWT7QNekXgwGOOQE9L1A959go/tpwkwI49ofiXlH9vR3PNRk9t2kSsSlx
7VlULkcF72cmPZceBc81GQ2X/kjqYH1vbxEAjzP3Fnsecd8j5qNv+n70D5+Z
azIablvnmzB+e4U4dGjD/fftpBB0X1koMxvPNdk4t/nGMaO3dgDwNPYlQKw+
4/W5R4L3HrPsM3NNNs5tPmjaM/spJKlDG7B/Mfcwtt1v1ubeck3Wx231iu8f
4HcRZBXcp4p1ndW5I5sm9Rqj5noNnOc2r0muqYNzLRM8q5q0tdFyfRCxLm68
Szbx9183K4CPGT3aAbKoT5smJUeOr3tu85rU1/PVYWY0Kdszm2+cPWuIQtpa
awTI92LOV7mtcgCvJrMwJrJpUuf48vjmNSlzhm2aTOP5JbfpUOYKDhTINaWu
zs4iEFQGSdaDTZM6xo3HN69JGTOXJU3a2jDsnQykrZ0kIHPQmWcZVDYJ1Ilp
xz25KWa8o/09zw2vQ5kbPErEdHpi6RJpr23tsixrmfcyWLGs5xwFcOzBwD1K
bPqMe/xui0nU4zYeH16TMvbdFt8Z9TN4n8evHZJ8Q1+fA6SthSzim7WXKoBj
fw/Aq8m42/rqsU9B6tP4TN0H4bmb6lDmAMvcYDlXG/V7FWZsIvcxQd/W7d/m
CAPkVjG/Ss4vhXnvo/KlHk0arnN8NddrFdW5vjIHuLqNjnb9IKAtMRx5aeK7
RxLZ62ywQcbAf7riPAcIr9XG15X82nTE7escX53rq+P4o2mjw/g9qT2Zo8r9
acFlfHaO+IH9wPid2A/cv7MCuFx3DeNLbP1VP3+L3F1qEjm95LA6x1dzneNb
W2+2PXbC8KeefNIBwLFHm7tPW46soffnqxXAZXyd3IOhVp1jbYKc358CIHeX
vorw7qkM4Di/8+V1g+5D9v1mzpjhAOAL5h+jkHYZ54gGXGMCmO8OYO8cgvlH
/G5HP3j1SFT/3v9czAdhrRvAfGW5XVVAji/npblfk7sWmWMwA989T7z1pmPA
/GJA7g3L/RkA7h8CfLFypYH8foRcbzniBvu07NfmyJFjYOF/eqY16g==
    "], {{0, 55}, {
    55, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{55, 55},
  PlotRange->{{0, 55}, {0, 55}}]], "Output",
 CellChangeTimes->{3.78102896248774*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b4aa9e73-c213-4e5e-9505-c3fe7f32d52b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Containers", "Subsection",
 CellChangeTimes->{{3.781028968109322*^9, 
  3.781028973059757*^9}},ExpressionUUID->"5849734c-b440-428d-8232-\
c4220287d2e5"],

Cell["Create a simple NetChain computing Cos[Sin[x]]:", "Text",
 CellChangeTimes->{{3.781029003858239*^9, 
  3.781029034339258*^9}},ExpressionUUID->"ac064170-95c6-4960-881c-\
206872a68cb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"chain", " ", "=", " ", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ElementwiseLayer", "[", "Sin", "]"}], ",", 
     RowBox[{"ElementwiseLayer", "[", "Cos", "]"}]}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7810290372031813`*^9, 3.78102908875819*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"9d67d0bc-7db0-4628-b572-d94e22647549"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Sin], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Cos], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Sin", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Cos", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781029089884116*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"91be9db6-7794-473a-a545-4447f04ff300"]
}, Open  ]],

Cell["\<\
Apply to an input and compare to result of functions directly\
\>", "Text",
 CellChangeTimes->{{3.7810283823905783`*^9, 3.781028383377253*^9}, {
  3.781029114815805*^9, 
  3.781029149024067*^9}},ExpressionUUID->"abf9713d-b907-4391-b938-\
78e451e4fa42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inData", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3.2", ",", " ", 
     RowBox[{"-", "2.3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chain", "[", "inData", "]"}]}], "Input",
 CellChangeTimes->{{3.781029169982168*^9, 3.781029199546509*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"d5742ac4-6e77-4aa9-a6f6-bfed44755bc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9982967376708984`", ",", "0.7346096038818359`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.781029202272161*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"f81e56ed-ca8a-41e3-b189-349d3de4ef6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"Sin", "[", "inData", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.781029208445413*^9, 3.781029216765863*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"064ebc37-9d57-4212-9d75-ffaaf75b0c1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9982967134401437`", ",", "0.7346096056562653`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.781029218035462*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"163c5b66-3dee-4d48-9e31-5c5915d2844c"]
}, Open  ]],

Cell["\<\
Create a simple NetChain that consists of an ElementwiseLayer the applies the \
Ramp function, followed by a SoftmaxLayer:\
\>", "Text",
 CellChangeTimes->{{3.781029233179089*^9, 
  3.7810292938253307`*^9}},ExpressionUUID->"936652aa-de14-46eb-8c15-\
e65e5b29bc23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"layer1", " ", "=", " ", 
   RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layer2", " ", "=", " ", 
   RowBox[{"SoftmaxLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chain", " ", "=", " ", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", 
    RowBox[{"layer1", ",", " ", "layer2"}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.781029297878542*^9, 3.781029342927765*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"48e48a9b-e8eb-4fdd-a2da-d9cfc404d4b4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {
                    120., {23.672119140625, 29.327880859375}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.781029346503372*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"264dd1f7-8e0f-434a-a98e-1044fdda8520"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inData1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", " ", "3", ",", " ", "2", ",", " ", "4"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chain", "[", "inData1", "]"}]}], "Input",
 CellChangeTimes->{{3.781029372670776*^9, 3.781029410394752*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"0bf71261-eaaf-4583-9263-ff1fa173b271"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.012037643231451511`", ",", "0.2417825162410736`", ",", 
   "0.08894681930541992`", ",", "0.6572329998016357`"}], "}"}]], "Output",
 CellChangeTimes->{3.781029412296176*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"c39d2d68-9693-4629-9dfb-70477f6a03f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer1", "[", "inData1", "]"}]], "Input",
 CellChangeTimes->{{3.78102943081286*^9, 3.781029443688463*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"f1a3161d-2493-40f9-8588-cec492ee120b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "3.`", ",", "2.`", ",", "4.`"}], "}"}]], "Output",
 CellChangeTimes->{3.781029444993271*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"4f01d997-ff4b-4260-973a-17f3d628654f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"layer2", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.781029448608794*^9, 3.781029452661635*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"67acbf7b-3745-4107-b72b-78f5a08146bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.012037643231451511`", ",", "0.2417825162410736`", ",", 
   "0.08894681930541992`", ",", "0.6572329998016357`"}], "}"}]], "Output",
 CellChangeTimes->{3.7810294536463327`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"1879dd56-1d79-4eeb-b2ab-4ccbefffae08"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 905},
WindowMargins->{{50, Automatic}, {-3, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-13aa4399-f987-4640-80be-e89e8fa2df15"->{
  Cell[227939, 4881, 22624, 482, 206, "Print",ExpressionUUID->"34977807-20e0-4112-8fae-1e5a33853b43",
   CellTags->"Info-13aa4399-f987-4640-80be-e89e8fa2df15"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-13aa4399-f987-4640-80be-e89e8fa2df15", 426079, 8915}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 53, "Subtitle",ExpressionUUID->"8b3e0eec-bd76-4153-8768-37fa2a2c0ae1"],
Cell[745, 27, 476, 14, 32, "Input",ExpressionUUID->"4a0dc4ad-f050-4580-8925-41ff7af673bb"],
Cell[1224, 43, 523, 12, 52, "Input",ExpressionUUID->"542695de-34f6-425f-8b3d-b89ad27edb4d"],
Cell[CellGroupData[{
Cell[1772, 59, 348, 6, 30, "Input",ExpressionUUID->"1c3860d3-7fb9-4675-88d5-3ec9d39190fd"],
Cell[2123, 67, 3629, 87, 47, "Output",ExpressionUUID->"fad1fb4c-16aa-45f7-9590-a1a4353eaedf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5789, 159, 284, 5, 30, "Input",ExpressionUUID->"0fef0946-fbf4-43d7-b290-1b3be255698f"],
Cell[6076, 166, 40477, 812, 75, "Output",ExpressionUUID->"f3aa45b6-edfd-40c4-8cc6-f59e36f0fc54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46590, 983, 3190, 73, 43, "Input",ExpressionUUID->"10a3d300-76e8-4a65-b1bb-06b02bbd7675"],
Cell[49783, 1058, 234, 4, 34, "Output",ExpressionUUID->"acf8c18d-1656-4631-90bf-54e2faee9bcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50054, 1067, 409, 8, 30, "Input",ExpressionUUID->"2d885446-5e5b-423e-8574-61cac1e865e5"],
Cell[50466, 1077, 40477, 812, 75, "Output",ExpressionUUID->"f787dd1f-6077-4562-b0af-651d07705d85"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90992, 1895, 154, 3, 53, "Subtitle",ExpressionUUID->"99e249f2-6f8e-4cfc-b772-674acd9cd778"],
Cell[CellGroupData[{
Cell[91171, 1902, 180, 2, 30, "Input",ExpressionUUID->"1987e0a6-bffe-4372-ae26-1b04a7f7bb7e"],
Cell[91354, 1906, 41138, 829, 232, "Output",ExpressionUUID->"7090aba4-55cc-4d88-9643-64c272350862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132529, 2740, 290, 6, 30, "Input",ExpressionUUID->"61b96391-eef0-4d43-b02a-6629a58633a7"],
Cell[132822, 2748, 16063, 325, 107, "Output",ExpressionUUID->"691a1c5e-637b-4f98-943b-916e232537f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148922, 3078, 341, 7, 30, "Input",ExpressionUUID->"9b553bff-c478-456c-b67c-6e58e4f2d40b"],
Cell[149266, 3087, 488, 9, 56, "Output",ExpressionUUID->"997a5fab-6437-46f9-a1d6-f78852f484e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149791, 3101, 488, 11, 30, "Input",ExpressionUUID->"14869858-ac6e-498d-a6d9-b2de4703d6d2"],
Cell[150282, 3114, 4550, 95, 62, "Output",ExpressionUUID->"f3aba2d2-b31f-474a-bd8f-3999f8461f2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154869, 3214, 204, 3, 30, "Input",ExpressionUUID->"4f71aad7-df29-43ba-84c4-66c0ee42a0b4"],
Cell[155076, 3219, 488, 9, 56, "Output",ExpressionUUID->"9925a9aa-a64b-419b-8d38-aa674e1d6d49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155601, 3233, 203, 3, 30, "Input",ExpressionUUID->"cd48bf23-9dd5-4474-906d-48f80dd675aa"],
Cell[155807, 3238, 167, 2, 34, "Output",ExpressionUUID->"ae44fb0e-5430-49ab-969b-9ff8edc18b59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156011, 3245, 174, 3, 45, "Subsubsection",ExpressionUUID->"8b374923-99a3-47eb-8940-704ece15ef68"],
Cell[CellGroupData[{
Cell[156210, 3252, 314, 6, 30, "Input",ExpressionUUID->"08e505fd-d491-4077-9b89-ef815c21cbcc"],
Cell[156527, 3260, 10706, 234, 62, "Output",ExpressionUUID->"29ee993f-888b-4dec-8dba-955d7565e6c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167270, 3499, 251, 5, 30, "Input",ExpressionUUID->"f958be9b-004c-433d-a5f7-e1b162160d35"],
Cell[167524, 3506, 529, 12, 24, "Message",ExpressionUUID->"5187dba6-6c58-44b8-8301-788db3b37fb8"],
Cell[168056, 3520, 155, 2, 34, "Output",ExpressionUUID->"3835e67a-d951-4e3b-8ced-cd0b72e2e207"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168248, 3527, 265, 4, 30, "Input",ExpressionUUID->"e204503d-881a-42ae-9aeb-e67763bb3604"],
Cell[168516, 3533, 9760, 213, 62, "Output",ExpressionUUID->"e1398373-3c36-4f91-af48-072622e7d526"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178313, 3751, 266, 5, 30, "Input",ExpressionUUID->"9ee2747c-2ccd-4d10-803b-93cfd699c247"],
Cell[178582, 3758, 314, 7, 34, "Output",ExpressionUUID->"e719fd13-1e25-439d-9b08-8774a64a516a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178933, 3770, 270, 5, 30, "Input",ExpressionUUID->"5e95641b-1d67-47fa-863f-ac6c2f6a295b"],
Cell[179206, 3777, 4455, 94, 76, "Output",ExpressionUUID->"04ec19f8-20bb-4586-bc02-32018cc25bd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183698, 3876, 269, 4, 30, "Input",ExpressionUUID->"1852dd0f-74b4-4607-a65a-253702605e22"],
Cell[183970, 3882, 4143, 88, 76, "Output",ExpressionUUID->"bff1ea5c-d5b9-47ab-8fb4-e73b53b5a062"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188150, 3975, 201, 3, 30, "Input",ExpressionUUID->"05735cb4-b106-45f8-ac5a-636d08dbb44b"],
Cell[188354, 3980, 212, 4, 34, "Output",ExpressionUUID->"97862065-50b9-4eee-b71a-dcd6523cf945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188603, 3989, 243, 4, 30, "Input",ExpressionUUID->"16a8de8f-8f07-4549-9884-4843a2ffbc76"],
Cell[188849, 3995, 13433, 265, 62, "Output",ExpressionUUID->"c24dc5e8-a6a3-49db-a815-493a505168b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202319, 4265, 481, 11, 30, "Input",ExpressionUUID->"501f5d45-8ffd-48cf-839c-6dbf973e8fd2"],
Cell[202803, 4278, 166, 2, 34, "Output",ExpressionUUID->"c4b5dfed-5257-429a-ab94-02a0cc34e7da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203006, 4285, 196, 3, 30, "Input",ExpressionUUID->"4f130e20-cbbe-476d-816f-76a7551586d9"],
Cell[203205, 4290, 24731, 589, 620, "Output",ExpressionUUID->"101a8c15-486c-4161-b66d-8ac90178107a"],
Cell[227939, 4881, 22624, 482, 206, "Print",ExpressionUUID->"34977807-20e0-4112-8fae-1e5a33853b43",
 CellTags->"Info-13aa4399-f987-4640-80be-e89e8fa2df15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250612, 5369, 161, 3, 54, "Subsection",ExpressionUUID->"ca00125a-6e3e-4325-94d1-5656f1586907"],
Cell[250776, 5374, 188, 3, 35, "Text",ExpressionUUID->"779b0a0b-fecf-4ad2-b45a-9e1e6163ffc6"],
Cell[CellGroupData[{
Cell[250989, 5381, 513, 11, 30, "Input",ExpressionUUID->"4c7c0fd6-82e5-4db8-92dd-585019b1a621"],
Cell[251505, 5394, 6207, 131, 63, "Output",ExpressionUUID->"e9243335-7dff-47a8-bda7-263a96b9b4b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257749, 5530, 731, 17, 43, "Input",ExpressionUUID->"e13140c2-1e12-442d-8277-62f8892a7e33"],
Cell[258483, 5549, 2668, 65, 266, "Output",ExpressionUUID->"9eb1f9a4-0585-4b3d-aaa0-6726708cb150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261188, 5619, 41769, 690, 112, "Input",ExpressionUUID->"dbf94491-199b-45b3-9563-4235503e326c"],
Cell[302960, 6311, 198, 4, 34, "Output",ExpressionUUID->"12e3c2cf-3c98-4959-a4f1-272343634fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303195, 6320, 241, 4, 30, "Input",ExpressionUUID->"77f95a29-d8c2-471e-a1da-f921ebf64e89"],
Cell[303439, 6326, 208, 4, 34, "Output",ExpressionUUID->"482af2c2-04b6-45d9-9acd-05694a07dcd8"]
}, Open  ]],
Cell[303662, 6333, 445, 9, 81, "Text",ExpressionUUID->"7fd224f0-96b4-4a7f-8dfa-54ae0092bfed"],
Cell[CellGroupData[{
Cell[304132, 6346, 425, 10, 30, "Input",ExpressionUUID->"d6c5aac4-53e7-4544-8185-8b5a0b074ede"],
Cell[304560, 6358, 16104, 324, 62, "Output",ExpressionUUID->"d80e769b-b50e-4776-ade7-aeb7183cc535"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320701, 6687, 4081, 73, 37, "Input",ExpressionUUID->"07d68e28-880d-4409-a795-2387953bcd07"],
Cell[324785, 6762, 7768, 148, 199, "Output",ExpressionUUID->"d4504fb6-fd58-4dbe-a4b7-a1aafc66f376"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332590, 6915, 4167, 75, 37, "Input",ExpressionUUID->"dccdfe03-e17e-48f1-b3ec-3e4be7556d8d"],
Cell[336760, 6992, 4131, 73, 72, "Output",ExpressionUUID->"c64ff85d-ecfe-447b-a669-a8ee3df82d62"]
}, Open  ]],
Cell[340906, 7068, 178, 3, 35, "Text",ExpressionUUID->"b69f886d-042c-4c68-a737-e7f0b37e20fb"],
Cell[CellGroupData[{
Cell[341109, 7075, 453, 10, 30, "Input",ExpressionUUID->"43be0a75-63f3-4f40-95b7-168b7700f857"],
Cell[341565, 7087, 6186, 131, 63, "Output",ExpressionUUID->"de8b0d90-bc96-4a1d-a4f9-67935e6de94a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347788, 7223, 257, 5, 30, "Input",ExpressionUUID->"2038bb70-b2f2-4ab5-978d-bb94d20d89aa"],
Cell[348048, 7230, 843, 18, 45, "Output",ExpressionUUID->"bca5082f-602d-48c5-9575-95576f5689b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348928, 7253, 215, 3, 30, "Input",ExpressionUUID->"fc7aa323-99a7-46ce-836f-b242e2fa2efd"],
Cell[349146, 7258, 195, 4, 34, "Output",ExpressionUUID->"7b7aedff-24c5-417d-a29d-393bf99d121b"]
}, Open  ]],
Cell[349356, 7265, 157, 3, 35, "Text",ExpressionUUID->"51975c26-9960-4487-a235-8ad0c6a9f609"],
Cell[CellGroupData[{
Cell[349538, 7272, 433, 9, 30, "Input",ExpressionUUID->"2b21ce8f-a80a-4af6-ad35-42eb1ce5ef2c"],
Cell[349974, 7283, 5611, 119, 63, "Output",ExpressionUUID->"8f2a9df1-f304-4e1b-accc-a4a6872d8e59"]
}, Open  ]],
Cell[355600, 7405, 232, 6, 35, "Text",ExpressionUUID->"c1f1bcd2-4e8a-4361-aafe-2c6d2d2dae93"],
Cell[CellGroupData[{
Cell[355857, 7415, 348, 7, 30, "Input",ExpressionUUID->"0cc9e9c6-ac04-4308-99c8-cbc91097e184"],
Cell[356208, 7424, 149, 2, 34, "Output",ExpressionUUID->"70507f39-da0a-43dc-9cb4-37c38abc22fa"]
}, Open  ]],
Cell[356372, 7429, 187, 3, 35, "Text",ExpressionUUID->"2ceeaacb-f3ad-42e0-81e1-631b6c96d3ef"],
Cell[CellGroupData[{
Cell[356584, 7436, 458, 10, 30, "Input",ExpressionUUID->"c45d6783-c648-4f41-b92e-f9ac03a1ff24"],
Cell[357045, 7448, 168, 2, 34, "Output",ExpressionUUID->"27ab9eae-57a8-4857-93f9-31a085f09571"]
}, Open  ]],
Cell[357228, 7453, 201, 3, 35, "Text",ExpressionUUID->"89e4872c-682e-4f5c-9917-8e6641693c66"],
Cell[CellGroupData[{
Cell[357454, 7460, 400, 9, 30, "Input",ExpressionUUID->"bdd3bdbf-733a-4fd6-b3d5-d918f314faa8"],
Cell[357857, 7471, 696, 14, 34, "Output",ExpressionUUID->"0ed24386-d7ab-4a01-b063-d6d48f7e53ae"]
}, Open  ]],
Cell[358568, 7488, 196, 3, 35, "Text",ExpressionUUID->"4c3ae788-ee94-4a8a-8fc6-b9390b95433a"],
Cell[CellGroupData[{
Cell[358789, 7495, 394, 9, 30, "Input",ExpressionUUID->"2421dc7f-6241-42c4-b95d-823b31f2f943"],
Cell[359186, 7506, 169, 2, 34, "Output",ExpressionUUID->"cbc84817-82f4-4589-9de1-0c9a0331fd67"]
}, Open  ]],
Cell[359370, 7511, 196, 3, 35, "Text",ExpressionUUID->"38958bde-d200-4668-98a8-a161a46e6099"],
Cell[CellGroupData[{
Cell[359591, 7518, 547, 12, 52, "Input",ExpressionUUID->"393a1b8b-ad8e-43bd-948c-f62ba0be42bc"],
Cell[360141, 7532, 15546, 312, 62, "Output",ExpressionUUID->"406a2a39-ac88-499e-807b-bd967214a8a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375724, 7849, 4028, 72, 37, "Input",ExpressionUUID->"fceb8851-e1df-40f1-a8b7-80bb129eff6f"],
Cell[379755, 7923, 4120, 72, 72, "Output",ExpressionUUID->"b4aa9e73-c213-4e5e-9505-c3fe7f32d52b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383924, 8001, 158, 3, 54, "Subsection",ExpressionUUID->"5849734c-b440-428d-8232-c4220287d2e5"],
Cell[384085, 8006, 189, 3, 35, "Text",ExpressionUUID->"ac064170-95c6-4960-881c-206872a68cb5"],
Cell[CellGroupData[{
Cell[384299, 8013, 391, 9, 30, "Input",ExpressionUUID->"9d67d0bc-7db0-4628-b572-d94e22647549"],
Cell[384693, 8024, 18291, 371, 75, "Output",ExpressionUUID->"91be9db6-7794-473a-a545-4447f04ff300"]
}, Open  ]],
Cell[402999, 8398, 262, 6, 35, "Text",ExpressionUUID->"abf9713d-b907-4391-b938-78e451e4fa42"],
Cell[CellGroupData[{
Cell[403286, 8408, 372, 8, 52, "Input",ExpressionUUID->"d5742ac4-6e77-4aa9-a6f6-bfed44755bc1"],
Cell[403661, 8418, 233, 5, 34, "Output",ExpressionUUID->"f81e56ed-ca8a-41e3-b189-349d3de4ef6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403931, 8428, 236, 4, 30, "Input",ExpressionUUID->"064ebc37-9d57-4212-9d75-ffaaf75b0c1d"],
Cell[404170, 8434, 233, 5, 34, "Output",ExpressionUUID->"163c5b66-3dee-4d48-9e31-5c5915d2844c"]
}, Open  ]],
Cell[404418, 8442, 274, 6, 58, "Text",ExpressionUUID->"936652aa-de14-46eb-8c15-e65e5b29bc23"],
Cell[CellGroupData[{
Cell[404717, 8452, 560, 13, 73, "Input",ExpressionUUID->"48e48a9b-e8eb-4fdd-a2da-d9cfc404d4b4"],
Cell[405280, 8467, 18685, 381, 92, "Output",ExpressionUUID->"264dd1f7-8e0f-434a-a98e-1044fdda8520"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424002, 8853, 405, 9, 52, "Input",ExpressionUUID->"0bf71261-eaaf-4583-9263-ff1fa173b271"],
Cell[424410, 8864, 296, 6, 34, "Output",ExpressionUUID->"c39d2d68-9693-4629-9dfb-70477f6a03f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424743, 8875, 209, 3, 30, "Input",ExpressionUUID->"f1a3161d-2493-40f9-8588-cec492ee120b"],
Cell[424955, 8880, 222, 4, 34, "Output",ExpressionUUID->"4f01d997-ff4b-4260-973a-17f3d628654f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425214, 8889, 204, 3, 30, "Input",ExpressionUUID->"67acbf7b-3745-4107-b72b-78f5a08146bf"],
Cell[425421, 8894, 298, 6, 68, "Output",ExpressionUUID->"1879dd56-1d79-4eeb-b2ab-4ccbefffae08"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

